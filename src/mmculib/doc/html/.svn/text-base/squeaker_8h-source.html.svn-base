<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>mmculib: squeaker.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>squeaker.h</h1><a href="squeaker_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00006"></a>00006 <span class="preprocessor">#ifndef SQUEAKER_H</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span><span class="preprocessor">#define SQUEAKER_H</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="preprocessor">#include "config.h"</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include "<a class="code" href="font_8h.html" title="Font support.">font.h</a>"</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include "<a class="code" href="ticker_8h.html">ticker.h</a>"</span>
<a name="l00012"></a>00012 
<a name="l00013"></a><a class="code" href="squeaker_8h.html#4cc7534d62566009c93b46ffc3c23b2a">00013</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#4cc7534d62566009c93b46ffc3c23b2a">squeaker_speed_t</a>;
<a name="l00014"></a><a class="code" href="squeaker_8h.html#62cacde75ab4085a503fc8f252addd06">00014</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#62cacde75ab4085a503fc8f252addd06">squeaker_scale_t</a>;
<a name="l00015"></a><a class="code" href="squeaker_8h.html#46ca3479167b2633f896dcbbbacefd57">00015</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#46ca3479167b2633f896dcbbbacefd57">squeaker_note_t</a>;
<a name="l00016"></a><a class="code" href="squeaker_8h.html#8a17207951cce5e58f86db1723cfcdb8">00016</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#8a17207951cce5e58f86db1723cfcdb8">squeaker_duration_t</a>;
<a name="l00017"></a><a class="code" href="squeaker_8h.html#a7b43c8687f6f16238c4f77f848f5bb8">00017</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#a7b43c8687f6f16238c4f77f848f5bb8">squeaker_period_t</a>;
<a name="l00018"></a><a class="code" href="squeaker_8h.html#ff6ff3c497a073fb9081c6f0873060c4">00018</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="squeaker_8h.html#ff6ff3c497a073fb9081c6f0873060c4">squeaker_volume_t</a>;
<a name="l00019"></a>00019 
<a name="l00020"></a>00020 
<a name="l00021"></a><a class="code" href="squeaker_8h.html#2f80701c36e79c0640d91c788feee0b37086672290c21aa61e1b231bdd7eea34">00021</a> <span class="keyword">enum</span> {<a class="code" href="squeaker_8h.html#2f80701c36e79c0640d91c788feee0b37086672290c21aa61e1b231bdd7eea34">SQUEAKER_OCTAVE_DEFAULT</a> = 4};
<a name="l00022"></a><a class="code" href="squeaker_8h.html#531c35e38ede3ea4e5ba5afb24b294933a6fbea7a5900b0893bc8d76f26257f7">00022</a> <span class="keyword">enum</span> {<a class="code" href="squeaker_8h.html#531c35e38ede3ea4e5ba5afb24b294933a6fbea7a5900b0893bc8d76f26257f7">SQUEAKER_SPEED_DEFAULT</a> = 200};
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 
<a name="l00025"></a>00025 <span class="comment">/* Could calculate scale divisors at run time.  2^(1/2) is approx</span>
<a name="l00026"></a>00026 <span class="comment">   1.0594631.  A reasonable rational approximation is 267/252 =</span>
<a name="l00027"></a>00027 <span class="comment">   1.0595238.  Let's save memory and provide a macro to compute the</span>
<a name="l00028"></a>00028 <span class="comment">   divisors.  */</span>
<a name="l00029"></a>00029 
<a name="l00030"></a><a class="code" href="squeaker_8h.html#654d09012c084c791ab550b9129d034b">00030</a> <span class="preprocessor">#define SQUEAKER_DIVISOR(POLL_RATE, FREQ) (POLL_RATE / FREQ + 0.5)</span>
<a name="l00031"></a>00031 <span class="preprocessor"></span>
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 <span class="preprocessor">#if 0</span>
<a name="l00034"></a>00034 <span class="preprocessor"></span><span class="keyword">enum</span> {<a class="code" href="squeaker_8h.html#9334a5b9057f32da96db9b5c6a045d67475299a244f21ccfb5a770d442f26b95">SQUEAKER_NOTE_MIN</a> = 60};
<a name="l00035"></a>00035 <span class="comment">/* Define divisors for chromatic scale C4 -&gt; C5.  For better accuracy</span>
<a name="l00036"></a>00036 <span class="comment">   this should be defined for the lowest frequency scale, however,</span>
<a name="l00037"></a>00037 <span class="comment">   this may need 16 bits per note.  */</span>
<a name="l00038"></a>00038 <span class="preprocessor">#define SQUEAKER_SCALE_TABLE(POLL_RATE) \</span>
<a name="l00039"></a>00039 <span class="preprocessor">   {SQUEAKER_DIVISOR (POLL_RATE, 261.6256), \</span>
<a name="l00040"></a>00040 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 277.1826), \</span>
<a name="l00041"></a>00041 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 293.6648), \</span>
<a name="l00042"></a>00042 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 311.1270), \</span>
<a name="l00043"></a>00043 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 329.6276), \</span>
<a name="l00044"></a>00044 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 349.2282), \</span>
<a name="l00045"></a>00045 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 369.9944), \</span>
<a name="l00046"></a>00046 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 391.9954), \</span>
<a name="l00047"></a>00047 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 415.3047), \</span>
<a name="l00048"></a>00048 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 440.0000), \</span>
<a name="l00049"></a>00049 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 466.1638), \</span>
<a name="l00050"></a>00050 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 493.8833)}</span>
<a name="l00051"></a>00051 <span class="preprocessor"></span><span class="preprocessor">#else</span>
<a name="l00052"></a><a class="code" href="squeaker_8h.html#9334a5b9057f32da96db9b5c6a045d67475299a244f21ccfb5a770d442f26b95">00052</a> <span class="preprocessor"></span><span class="keyword">enum</span> {<a class="code" href="squeaker_8h.html#9334a5b9057f32da96db9b5c6a045d67475299a244f21ccfb5a770d442f26b95">SQUEAKER_NOTE_MIN</a> = 40};
<a name="l00053"></a>00053 <span class="comment">/* Define divisors for chromatic scale E2 -&gt; D#3.  For better accuracy</span>
<a name="l00054"></a>00054 <span class="comment">   this should be defined for the lowest frequency scale, however,</span>
<a name="l00055"></a>00055 <span class="comment">   this may need 16 bits per note.  */</span>
<a name="l00056"></a><a class="code" href="squeaker_8h.html#89398dd7ac876b11da44fd87621de52a">00056</a> <span class="preprocessor">#define SQUEAKER_SCALE_TABLE(POLL_RATE) \</span>
<a name="l00057"></a>00057 <span class="preprocessor">   {SQUEAKER_DIVISOR (POLL_RATE, 82.41), \</span>
<a name="l00058"></a>00058 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 87.31), \</span>
<a name="l00059"></a>00059 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 92.50), \</span>
<a name="l00060"></a>00060 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 98.00), \</span>
<a name="l00061"></a>00061 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 103.83), \</span>
<a name="l00062"></a>00062 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 110.0), \</span>
<a name="l00063"></a>00063 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 116.54), \</span>
<a name="l00064"></a>00064 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 123.47), \</span>
<a name="l00065"></a>00065 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 130.81), \</span>
<a name="l00066"></a>00066 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 138.59), \</span>
<a name="l00067"></a>00067 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 146.83), \</span>
<a name="l00068"></a>00068 <span class="preprocessor">    SQUEAKER_DIVISOR (POLL_RATE, 155.56)}</span>
<a name="l00069"></a>00069 <span class="preprocessor"></span><span class="preprocessor">#endif</span>
<a name="l00070"></a>00070 <span class="preprocessor"></span>
<a name="l00071"></a><a class="code" href="structsqueaker__private__t.html">00071</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00072"></a>00072 {
<a name="l00073"></a><a class="code" href="structsqueaker__private__t.html#372154b877a2a8d9faf23b335a27b181">00073</a>     uint8_t note_clock;
<a name="l00074"></a><a class="code" href="structsqueaker__private__t.html#c19828d0be7f4938c7676bf1547623c7">00074</a>     uint8_t note_period;
<a name="l00075"></a><a class="code" href="structsqueaker__private__t.html#af9ffc0b06a83522a648d1b429f8e435">00075</a>     uint8_t note_duty;
<a name="l00076"></a><a class="code" href="structsqueaker__private__t.html#5d8ae288cd1d6f1a51a1447510119317">00076</a>     uint8_t note_holdoff;
<a name="l00077"></a>00077     <span class="comment">/* Pointer to start of string.  */</span>
<a name="l00078"></a><a class="code" href="structsqueaker__private__t.html#6f45e1943e6f0b8ee67117abd6a6b62b">00078</a>     <span class="keyword">const</span> <span class="keywordtype">char</span> *start;
<a name="l00079"></a>00079     <span class="comment">/* Pointer to current position in string.  */</span>    
<a name="l00080"></a><a class="code" href="structsqueaker__private__t.html#21a7eea0a8ccac207baefae4d81865f5">00080</a>     <span class="keyword">const</span> <span class="keywordtype">char</span> *cur;
<a name="l00081"></a><a class="code" href="structsqueaker__private__t.html#69ca1b8a142c2a4ac543ede5b8beb06b">00081</a>     uint8_t holdoff;
<a name="l00082"></a><a class="code" href="structsqueaker__private__t.html#4c251844d783d1683e0838c058488255">00082</a>     uint16_t poll_rate;
<a name="l00083"></a><a class="code" href="structsqueaker__private__t.html#ae7ca730e1ef15f14016aacbad39152a">00083</a>     <span class="keyword">const</span> <span class="keywordtype">char</span> *loop_start;
<a name="l00084"></a><a class="code" href="structsqueaker__private__t.html#6a199edcabf647fed91b5d1fffc209d1">00084</a>     int8_t loop_count;
<a name="l00085"></a><a class="code" href="structsqueaker__private__t.html#37d737c89bb007a89506a36eaa9dfec3">00085</a>     uint8_t prescaler;
<a name="l00086"></a><a class="code" href="structsqueaker__private__t.html#315fb902ec138569cbb35195ae7c06a9">00086</a>     uint8_t note_fraction;
<a name="l00087"></a><a class="code" href="structsqueaker__private__t.html#8cb834a7e4b7213d6510f8d341e4043e">00087</a>     <a class="code" href="squeaker_8h.html#4cc7534d62566009c93b46ffc3c23b2a">squeaker_speed_t</a> speed;
<a name="l00088"></a><a class="code" href="structsqueaker__private__t.html#aa144fd704f02c394c6c9dbd4e77f009">00088</a>     <a class="code" href="squeaker_8h.html#ff6ff3c497a073fb9081c6f0873060c4">squeaker_volume_t</a> volume;
<a name="l00089"></a><a class="code" href="structsqueaker__private__t.html#e56e5ae9f7afd550010187b2e11cb061">00089</a>     <a class="code" href="structticker8__t.html">ticker8_t</a> ticker;
<a name="l00090"></a><a class="code" href="structsqueaker__private__t.html#4f554f30cbf7db6cc5b642d0517591eb">00090</a>     <a class="code" href="squeaker_8h.html#62cacde75ab4085a503fc8f252addd06">squeaker_scale_t</a> *scale_table;
<a name="l00091"></a><a class="code" href="structsqueaker__private__t.html#b5652cbd8b09f0cd2da88662ba07e3ee">00091</a>     uint8_t octave;
<a name="l00092"></a>00092 } <a class="code" href="structsqueaker__private__t.html">squeaker_private_t</a>;
<a name="l00093"></a>00093 
<a name="l00094"></a>00094 
<a name="l00095"></a><a class="code" href="squeaker_8h.html#ee51e1f1b6a38dd6154e0298e412e6e3">00095</a> <span class="keyword">typedef</span> <a class="code" href="structsqueaker__private__t.html">squeaker_private_t</a> <a class="code" href="structsqueaker__private__t.html">squeaker_obj_t</a>;
<a name="l00096"></a><a class="code" href="squeaker_8h.html#f3f740a6046d8481db8b3faef767cffc">00096</a> <span class="keyword">typedef</span> <a class="code" href="structsqueaker__private__t.html">squeaker_obj_t</a> *<a class="code" href="structsqueaker__private__t.html">squeaker_t</a>;
<a name="l00097"></a>00097 
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <span class="comment">/* The scale table is usually defined with:</span>
<a name="l00100"></a>00100 <span class="comment"></span>
<a name="l00101"></a>00101 <span class="comment"> static squeaker_scale_t scale_table[] = SQUEAKER_SCALE_TABLE (LOOP_POLL_RATE);</span>
<a name="l00102"></a>00102 <span class="comment">*/</span>
<a name="l00103"></a>00103 
<a name="l00104"></a>00104 
<a name="l00105"></a>00105 <span class="keyword">extern</span> <a class="code" href="structsqueaker__private__t.html">squeaker_t</a>
<a name="l00106"></a>00106 <a class="code" href="squeaker_8c.html#0cf1bbc0d356b83d8fa3f4ce2ccced6e">squeaker_init</a> (<a class="code" href="structsqueaker__private__t.html">squeaker_obj_t</a> *dev, 
<a name="l00107"></a>00107                uint16_t poll_rate,
<a name="l00108"></a>00108                <a class="code" href="squeaker_8h.html#62cacde75ab4085a503fc8f252addd06">squeaker_scale_t</a> *scale_table);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="keyword">extern</span> <span class="keywordtype">void</span> 
<a name="l00111"></a>00111 <a class="code" href="squeaker_8c.html#733f828b6525ee925505c958e322280f">squeaker_play</a> (<a class="code" href="structsqueaker__private__t.html">squeaker_t</a> squeaker, <span class="keyword">const</span> <span class="keywordtype">char</span> *str);
<a name="l00112"></a>00112 
<a name="l00113"></a>00113 <span class="keyword">extern</span> int8_t 
<a name="l00114"></a>00114 <a class="code" href="squeaker_8c.html#63e4a851bf704c0dd9e7e394905ff94c">squeaker_update</a> (<a class="code" href="structsqueaker__private__t.html">squeaker_t</a> squeaker);
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 <span class="comment">/* Set (base) speed in beats per minute (BPM).  */</span>
<a name="l00117"></a>00117 <span class="keyword">extern</span> <span class="keywordtype">void</span> 
<a name="l00118"></a>00118 <a class="code" href="squeaker_8c.html#5562006d702d17615c7db8bcf0760059">squeaker_speed_set</a> (<a class="code" href="structsqueaker__private__t.html">squeaker_t</a> squeaker, <a class="code" href="squeaker_8h.html#4cc7534d62566009c93b46ffc3c23b2a">squeaker_speed_t</a> speed);
<a name="l00119"></a>00119 
<a name="l00120"></a>00120 <span class="comment">/* Set volume as percentage of maximum.  */</span>
<a name="l00121"></a>00121 <span class="keyword">extern</span> <span class="keywordtype">void</span> 
<a name="l00122"></a>00122 <a class="code" href="squeaker_8c.html#5bdf076d8fa998c077f17d4e22c54d82">squeaker_volume_set</a> (<a class="code" href="structsqueaker__private__t.html">squeaker_t</a> squeaker, <a class="code" href="squeaker_8h.html#ff6ff3c497a073fb9081c6f0873060c4">squeaker_volume_t</a> volume);
<a name="l00123"></a>00123 
<a name="l00124"></a>00124 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue May 27 11:44:04 2008 for mmculib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
