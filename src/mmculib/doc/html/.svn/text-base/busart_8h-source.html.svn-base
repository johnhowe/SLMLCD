<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>mmculib: busart.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>busart.h</h1><a href="busart_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00006"></a>00006 <span class="preprocessor">#ifndef BUSART_H</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span><span class="preprocessor">#define BUSART_H</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="preprocessor">#include "config.h"</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include "<a class="code" href="ring_8h.html" title="Ring buffer interface.">ring.h</a>"</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="preprocessor">#include "usart0.h"</span>
<a name="l00013"></a>00013 
<a name="l00014"></a><a class="code" href="busart_8h.html#35b5799be3365f2e78ba0861f8617be6">00014</a> <span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structbusart__dev__struct.html">busart_dev_struct</a> <a class="code" href="structbusart__dev__struct.html">busart_dev_t</a>;
<a name="l00015"></a>00015 
<a name="l00016"></a><a class="code" href="busart_8h.html#61bfee1b71d077aa48a2de84b3700472">00016</a> <span class="keyword">typedef</span> <a class="code" href="structbusart__dev__struct.html">busart_dev_t</a> *<a class="code" href="structbusart__dev__struct.html">busart_t</a>;
<a name="l00017"></a>00017 
<a name="l00018"></a><a class="code" href="busart_8h.html#9f956425cb0b7f30b0185c0162b214a5">00018</a> <span class="preprocessor">#define BUSART_BAUD_DIVISOR(BAUD_RATE) USART0_BAUD_DIVISOR(BAUD_RATE)</span>
<a name="l00019"></a>00019 <span class="preprocessor"></span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 <span class="keyword">extern</span> <a class="code" href="structbusart__dev__struct.html">busart_t</a>
<a name="l00022"></a>00022 <a class="code" href="busart_8c.html#122760802479615098beafa7bee7e3e2">busart_init</a> (uint8_t channel,
<a name="l00023"></a>00023              uint16_t baud_divisor,
<a name="l00024"></a>00024              <span class="keywordtype">char</span> *tx_buffer, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> tx_size,
<a name="l00025"></a>00025              <span class="keywordtype">char</span> *rx_buffer, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> rx_size);
<a name="l00026"></a>00026 
<a name="l00027"></a>00027 
<a name="l00028"></a>00028 <span class="comment">/* Read as many bytes as there are available in the ring buffer up to</span>
<a name="l00029"></a>00029 <span class="comment">   the specifed size.  */</span>
<a name="l00030"></a>00030 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00031"></a>00031 <a class="code" href="busart_8c.html#fdff07098c1ec43ea4716cad2bb5046f">busart_read</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keywordtype">void</span> *data, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> size);
<a name="l00032"></a>00032 
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 <span class="comment">/* Read size bytes.  This will block until the desired number of</span>
<a name="l00035"></a>00035 <span class="comment">   bytes have been read.  */</span>
<a name="l00036"></a>00036 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00037"></a>00037 <a class="code" href="busart_8c.html#89162b633f49fe0017264ba44e5b0737">busart_read_block</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keywordtype">void</span> *data, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> size);
<a name="l00038"></a>00038 
<a name="l00039"></a>00039 
<a name="l00040"></a>00040 <span class="comment">/* Write size bytes.  Currently this only writes as many bytes (up to</span>
<a name="l00041"></a>00041 <span class="comment">   the desired size) that can currently fit in the ring buffer.   */</span>
<a name="l00042"></a>00042 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00043"></a>00043 <a class="code" href="busart_8c.html#eaf365b3af854e83c0ebf5e9daef0c01">busart_write</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keyword">const</span> <span class="keywordtype">void</span> *data, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> size);
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 <span class="comment">/* Write size bytes.  This will block until the desired number of</span>
<a name="l00047"></a>00047 <span class="comment">   bytes have been written.  */</span>
<a name="l00048"></a>00048 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00049"></a>00049 <a class="code" href="busart_8c.html#2111a900dc10c5167ec5de7c6716987d">busart_write_block</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keyword">const</span> <span class="keywordtype">void</span> *data, <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a> size);
<a name="l00050"></a>00050 
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 <span class="comment">/* Return the number of bytes immediately available for reading.  */</span>
<a name="l00053"></a>00053 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00054"></a>00054 <a class="code" href="busart_8c.html#80a917cd354a76feb385851c3e2e84fb">busart_read_num</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00055"></a>00055 
<a name="l00056"></a>00056 
<a name="l00057"></a>00057 <span class="comment">/* Return the number of bytes immediately available for writing.  */</span>
<a name="l00058"></a>00058 <span class="keyword">extern</span> <a class="code" href="ring_8h.html#f1370ade98f8d7f1c525801f84c449bb">ring_size_t</a>
<a name="l00059"></a>00059 <a class="code" href="busart_8c.html#d347428f52be5eb1d10a6407c479f919">busart_write_num</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00060"></a>00060 
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 <span class="comment">/* Return non-zero if there is a character ready to be read.  */</span>
<a name="l00063"></a>00063 <span class="keyword">extern</span> <span class="keywordtype">bool</span>
<a name="l00064"></a>00064 <a class="code" href="busart_8c.html#d42d8780d05a207cd2743d53db132edd">busart_read_ready_p</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00065"></a>00065 
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="comment">/* Return non-zero if a character can be written without blocking.  */</span>
<a name="l00068"></a>00068 <span class="keyword">extern</span> <span class="keywordtype">bool</span>
<a name="l00069"></a>00069 <a class="code" href="busart_8c.html#55bfea12451b4ef555473c37a991a64c">busart_write_ready_p</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 
<a name="l00072"></a>00072 <span class="comment">/* Return non-zero if transmitter finished.  */</span>
<a name="l00073"></a>00073 <span class="keyword">extern</span> <span class="keywordtype">bool</span>
<a name="l00074"></a>00074 <a class="code" href="busart_8c.html#1189be98be7fd61968e74dddac59b940">busart_write_finished_p</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 
<a name="l00077"></a>00077 <span class="comment">/* Read character.  */</span>
<a name="l00078"></a>00078 <span class="keyword">extern</span> int8_t
<a name="l00079"></a>00079 <a class="code" href="busart_8c.html#6fd830d2541d56f33ee8eb076b7a2f16">busart_getc</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart);
<a name="l00080"></a>00080 
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="comment">/* Write character.  */</span>
<a name="l00083"></a>00083 <span class="keyword">extern</span> int8_t
<a name="l00084"></a>00084 <a class="code" href="busart_8c.html#d92c531d9709b56c60a9e6238542a500">busart_putc</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keywordtype">char</span> ch);
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 
<a name="l00087"></a>00087 <span class="comment">/* Write string.  This blocks until the string is buffered.  */</span>
<a name="l00088"></a>00088 <span class="keyword">extern</span> int8_t
<a name="l00089"></a>00089 <a class="code" href="busart_8c.html#7f0644d66e1d159f085bc2a24ebd765c">busart_puts</a> (<a class="code" href="structbusart__dev__struct.html">busart_t</a> busart, <span class="keyword">const</span> <span class="keywordtype">char</span> *str);
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue May 27 11:44:04 2008 for mmculib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
