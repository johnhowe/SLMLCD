<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>mmculib: s_eeprom.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.4 -->
<div class="tabs">
  <ul>
    <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
    <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
    <li class="current"><a href="files.html"><span>Files</span></a></li>
  </ul>
</div>
<h1>s_eeprom.h</h1><a href="s__eeprom_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00008"></a>00008 <span class="preprocessor">#ifndef SPI_EEPROM_H</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">#define SPI_EEPROM_H</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011 <span class="preprocessor">#include "config.h"</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include "port.h"</span>
<a name="l00013"></a>00013 
<a name="l00014"></a>00014 
<a name="l00015"></a><a class="code" href="structspi__eeprom__cfg__t.html">00015</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00016"></a>00016 {
<a name="l00017"></a><a class="code" href="structspi__eeprom__cfg__t.html#23b91d3e6bbde3ff3d0b3d68d7079f89">00017</a>     port_t cs_port;
<a name="l00018"></a><a class="code" href="structspi__eeprom__cfg__t.html#08bc493a5192ad34c23ce2735da12d14">00018</a>     port_bit_t cs_bitno;
<a name="l00019"></a>00019 } <a class="code" href="structspi__eeprom__cfg__t.html">spi_eeprom_cfg_t</a>;
<a name="l00020"></a>00020 
<a name="l00021"></a>00021 
<a name="l00022"></a>00022 <span class="comment">/* This structure is defined here so the compiler can allocate enough</span>
<a name="l00023"></a>00023 <span class="comment">   memory for it.  However, its fields should be treated as private.  */</span>
<a name="l00024"></a><a class="code" href="structspi__eeprom__private__t.html">00024</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00025"></a>00025 {
<a name="l00026"></a><a class="code" href="structspi__eeprom__private__t.html#1f43830153161e66dec928f9ffbb94c6">00026</a>     port_t cs_port;
<a name="l00027"></a><a class="code" href="structspi__eeprom__private__t.html#d61d5726a45d087462d019befaf55536">00027</a>     port_mask_t cs_bitmask;
<a name="l00028"></a>00028 } <a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_private_t</a>;
<a name="l00029"></a>00029 
<a name="l00030"></a>00030 
<a name="l00031"></a><a class="code" href="s__eeprom_8h.html#03b3379cc39ad507e13378aa447eba34">00031</a> <span class="keyword">typedef</span> <a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_private_t</a> <a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_obj_t</a>;
<a name="l00032"></a><a class="code" href="s__eeprom_8h.html#c3f92ea56a399470da737c4bd1f8aa2e">00032</a> <span class="keyword">typedef</span> <a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_obj_t</a> *<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a>;
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="s__eeprom_8h.html#44f24a44c6ca673e8ca69153b673016a">00035</a> <span class="keyword">typedef</span> uint16_t <a class="code" href="s__eeprom_8h.html#44f24a44c6ca673e8ca69153b673016a">spi_eeprom_addr_t</a>;
<a name="l00036"></a><a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">00036</a> <span class="keyword">typedef</span> uint16_t <a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">spi_eeprom_size_t</a>;
<a name="l00037"></a>00037 
<a name="l00038"></a>00038 <span class="comment">/* Initialise the SPI EEPROM for operation.  DEV is a pointer into</span>
<a name="l00039"></a>00039 <span class="comment">   RAM that stores the state of the SPI EEPROM.  CFG is a pointer into</span>
<a name="l00040"></a>00040 <span class="comment">   ROM to define the port the SPI EEPROM is connected to.  The</span>
<a name="l00041"></a>00041 <span class="comment">   returned handle is passed to the other spi_eeprom_xxx routines to</span>
<a name="l00042"></a>00042 <span class="comment">   denote the SPI EEPROM to operate on.  */</span>
<a name="l00043"></a>00043 <span class="keyword">extern</span> <a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a>
<a name="l00044"></a>00044 <a class="code" href="s__eeprom_8c.html#a49459864983503d59b8109ebd6f9388">spi_eeprom_init</a> (<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_obj_t</a> *dev, <span class="keyword">const</span> <a class="code" href="structspi__eeprom__cfg__t.html">spi_eeprom_cfg_t</a> *cfg);
<a name="l00045"></a>00045 
<a name="l00046"></a>00046 
<a name="l00047"></a>00047 <span class="comment">/* Read SIZE bytes from ADDR into BUFFER.  */</span>
<a name="l00048"></a>00048 <span class="keyword">extern</span> <a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">spi_eeprom_size_t</a>
<a name="l00049"></a>00049 <a class="code" href="s__eeprom_8c.html#177f0aa77df91f0017b1bd918db4892e">spi_eeprom_read</a> (<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a> dev, <a class="code" href="s__eeprom_8h.html#44f24a44c6ca673e8ca69153b673016a">spi_eeprom_addr_t</a> addr, 
<a name="l00050"></a>00050                  <span class="keywordtype">void</span> *buffer, <a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">spi_eeprom_size_t</a> size);
<a name="l00051"></a>00051 
<a name="l00052"></a>00052 
<a name="l00053"></a>00053 <span class="comment">/* Write SIZE bytes to ADDR from BUFFER.  */</span>
<a name="l00054"></a>00054 <span class="keyword">extern</span> <a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">spi_eeprom_size_t</a> 
<a name="l00055"></a>00055 <a class="code" href="s__eeprom_8c.html#0dcad8f6412695d5e73cb362dac59db0">spi_eeprom_write</a> (<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a> dev, <a class="code" href="s__eeprom_8h.html#44f24a44c6ca673e8ca69153b673016a">spi_eeprom_addr_t</a> addr,
<a name="l00056"></a>00056                   <span class="keyword">const</span> <span class="keywordtype">void</span> *buffer, <a class="code" href="s__eeprom_8h.html#f2a550a20fb2b8ce9b36fc35eeba1818">spi_eeprom_size_t</a> size);
<a name="l00057"></a>00057 
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 <span class="comment">/* Setup SPI EEPROM for continuous writing.  */</span>
<a name="l00060"></a>00060 <span class="keyword">extern</span> uint8_t
<a name="l00061"></a>00061 <a class="code" href="s__eeprom_8c.html#9037f7a9b91befa28790e757da89f8bb">spi_eeprom_write_setup</a> (<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a> dev, <a class="code" href="s__eeprom_8h.html#44f24a44c6ca673e8ca69153b673016a">spi_eeprom_addr_t</a> addr);
<a name="l00062"></a>00062 
<a name="l00063"></a>00063 
<a name="l00064"></a>00064 <span class="comment">/* Disable SPI EEPROM.  */</span>
<a name="l00065"></a>00065 uint8_t
<a name="l00066"></a>00066 <a class="code" href="s__eeprom_8c.html#f5739ad2d213dec976659b6ba8cfd513">spi_eeprom_disable</a> (<a class="code" href="structspi__eeprom__private__t.html">spi_eeprom_t</a> dev);
<a name="l00067"></a>00067 
<a name="l00068"></a>00068 <span class="preprocessor">#endif</span>
</pre></div><hr size="1"><address style="text-align: right;"><small>Generated on Wed Feb 27 09:56:11 2008 for mmculib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.4 </small></address>
</body>
</html>
