<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>mmculib: rf.h Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
<h1>rf.h</h1><a href="rf_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 
<a name="l00008"></a>00008 <span class="preprocessor">#ifndef RF_H</span>
<a name="l00009"></a>00009 <span class="preprocessor"></span><span class="preprocessor">#define RF_H</span>
<a name="l00010"></a>00010 <span class="preprocessor"></span>
<a name="l00011"></a>00011 <span class="preprocessor">#include "<a class="code" href="nrf__config_8h.html">nrf_config.h</a>"</span>
<a name="l00012"></a>00012 
<a name="l00013"></a>00013 
<a name="l00014"></a><a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">00014</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a27080a94b2b73b051ba0a0069342067f">RF_BROADCAST_SLAVE_ID</a> = 0xFE, 
<a name="l00015"></a><a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a7e93b08a459eb669e899a7051280deb2">00015</a>               <a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a7e93b08a459eb669e899a7051280deb2">RF_MASTER_ID</a> = 0xFF} <a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">rf_id_t</a>;
<a name="l00016"></a>00016 
<a name="l00017"></a><a class="code" href="rf_8h.html#7b1be9b133dc305fc907fe5ed153ea2a">00017</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="rf_8h.html#7b1be9b133dc305fc907fe5ed153ea2a">rf_channel_t</a>;
<a name="l00018"></a>00018 
<a name="l00019"></a><a class="code" href="rf_8h.html#e8a3b6a5d0d3244ed73924ab2421a0d068a87492285324bb4bcc49745fea6303">00019</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#e8a3b6a5d0d3244ed73924ab2421a0d068a87492285324bb4bcc49745fea6303">RF_BROADCAST_CHANNEL</a> = 0};
<a name="l00020"></a>00020 
<a name="l00021"></a><a class="code" href="rf_8h.html#f715e26dfffd1f8de1c18449e2770cff5bd3cca586cf54c6c721877a705f1d9e">00021</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#f715e26dfffd1f8de1c18449e2770cff5bd3cca586cf54c6c721877a705f1d9e">RF_READ_WAIT_MS</a> = 2};
<a name="l00022"></a><a class="code" href="rf_8h.html#fb730582952b7ceec73d7dc9bf7bef39c6e4667cba49e9fd49c9582fab1daed8">00022</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#fb730582952b7ceec73d7dc9bf7bef39c6e4667cba49e9fd49c9582fab1daed8">RF_WRITE_WAIT_MS</a> = 4};
<a name="l00023"></a><a class="code" href="rf_8h.html#fccd240f973cf154952fb917c92097197dac7d22fcd2d64b58aaa1497b212c6b">00023</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#fccd240f973cf154952fb917c92097197dac7d22fcd2d64b58aaa1497b212c6b">RF_READY_WAIT_US</a> = 100};
<a name="l00024"></a><a class="code" href="rf_8h.html#7cc2e4244ca368f68e5746185eda6c4a4111b44499bc36975877f8107170d4b3">00024</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#7cc2e4244ca368f68e5746185eda6c4a4111b44499bc36975877f8107170d4b3">RF_READY_WAIT2_US</a> = 300};
<a name="l00025"></a>00025 
<a name="l00026"></a><a class="code" href="structrf__node__t.html">00026</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00027"></a>00027 {
<a name="l00028"></a><a class="code" href="structrf__node__t.html#f5493ae75c0f6d9af77157d937879fbd">00028</a>     <a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">rf_id_t</a> id;
<a name="l00029"></a><a class="code" href="structrf__node__t.html#b9f3578cc777ade27d5b08f3e8f402c0">00029</a>     <a class="code" href="rf_8h.html#7b1be9b133dc305fc907fe5ed153ea2a">rf_channel_t</a> channel;
<a name="l00030"></a>00030 } <a class="code" href="structrf__node__t.html">rf_node_t</a>;
<a name="l00031"></a>00031 
<a name="l00032"></a>00032 
<a name="l00033"></a><a class="code" href="rf_8h.html#edcf2109f459315e1a7f2af73ec9b603f44b9cdf5696850d3db53a1276344834">00033</a> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#edcf2109f459315e1a7f2af73ec9b603f44b9cdf5696850d3db53a1276344834">RF_DEVICE_ID_SIZE</a> = 8};
<a name="l00034"></a>00034 
<a name="l00035"></a>00035 <span class="comment">/* Define a probe as a 64-bit device ID.  */</span>
<a name="l00036"></a><a class="code" href="structrf__probe__t.html">00036</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
<a name="l00037"></a>00037 {
<a name="l00038"></a><a class="code" href="structrf__probe__t.html#b092c162b7dbe56a2432f40054516d85">00038</a>     <a class="code" href="structrf__node__t.html">rf_node_t</a> node;
<a name="l00039"></a><a class="code" href="structrf__probe__t.html#cf2abc705cd1a8a8952f39f2fa0a0f35">00039</a>     uint8_t device_id[<a class="code" href="rf_8h.html#edcf2109f459315e1a7f2af73ec9b603f44b9cdf5696850d3db53a1276344834">RF_DEVICE_ID_SIZE</a>];
<a name="l00040"></a>00040 } <a class="code" href="structrf__probe__t.html">rf_probe_t</a>;
<a name="l00041"></a>00041 
<a name="l00042"></a>00042 
<a name="l00043"></a><a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">00043</a> <span class="keyword">typedef</span> uint8_t <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a>;
<a name="l00044"></a>00044 
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">00046</a> <span class="keyword">typedef</span> <span class="keyword">enum</span> {<a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e3c663b66383a081b518ee167aa6ecd9b">RF_CMD_ACK</a> = 0x61,
<a name="l00047"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e784b2b61bb23b0d46eab1faff091a5b5">00047</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e784b2b61bb23b0d46eab1faff091a5b5">RF_CMD_DATA_START</a>,
<a name="l00048"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ea9d1de77cadeaf2f3e408df3774d9b34">00048</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ea9d1de77cadeaf2f3e408df3774d9b34">RF_CMD_CHANNEL_SET</a>,
<a name="l00049"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ea8700e7eabcf6fdef35aeef53e528342">00049</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ea8700e7eabcf6fdef35aeef53e528342">RF_CMD_TIMESTAMP_REQ</a>,
<a name="l00050"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e205d1f0067e446c1be05bc5ee2a6fe93">00050</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e205d1f0067e446c1be05bc5ee2a6fe93">RF_CMD_BROADCAST_MODE</a>,
<a name="l00051"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ee003a29a0d4509d21c9246d34fceede3">00051</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ee003a29a0d4509d21c9246d34fceede3">RF_CMD_BROADCAST_EXIT</a>,
<a name="l00052"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ec55d95e278d4a66a1f7bd5302bab9e84">00052</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ec55d95e278d4a66a1f7bd5302bab9e84">RF_CMD_DEVICE_ID_GET</a>,
<a name="l00053"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ec705953eb074ab078032026d17b1e7d7">00053</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ec705953eb074ab078032026d17b1e7d7">RF_CMD_DEVICE_ID_RESPONSE</a>,
<a name="l00054"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e199a6240b16e415441bcb7c896b7467c">00054</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e199a6240b16e415441bcb7c896b7467c">RF_CMD_ENUMERATE_DEVICE</a>,
<a name="l00055"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e7ff7c8f1a93cfb6d2c87c7915a5eead1">00055</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e7ff7c8f1a93cfb6d2c87c7915a5eead1">RF_CMD_RESEND_PACKET</a>,
<a name="l00056"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ecd80a9428fa8a2c310859e0c98505712">00056</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80ecd80a9428fa8a2c310859e0c98505712">RF_CMD_ALL_PACKETS_RECEIVED</a>,
<a name="l00057"></a><a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e1aaced10794baece85b7b578d3ee96f9">00057</a>               <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e1aaced10794baece85b7b578d3ee96f9">RF_CMD_SIZE</a>} <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">rf_cmd_t</a>;
<a name="l00058"></a>00058 
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="rf_8h.html#3b2c0a6b21338480699992a1add6777f">00060</a> <span class="preprocessor">#define RF_PROBE_NOT_FOUND 0xFD</span>
<a name="l00061"></a>00061 <span class="preprocessor"></span>
<a name="l00062"></a><a class="code" href="rf_8h.html#724ca97dc08517798ecf9090cd95e2ce">00062</a> <span class="preprocessor">#define RF_PAYLOAD_SIZE NRF_PAYLOAD_SIZE</span>
<a name="l00063"></a>00063 <span class="preprocessor"></span>
<a name="l00064"></a><a class="code" href="rf_8h.html#2467067cb85807737aeea7eb13fba3d8">00064</a> <span class="preprocessor">#define RF_RETRIES_MAX 30</span>
<a name="l00065"></a>00065 <span class="preprocessor"></span>
<a name="l00066"></a>00066 <span class="comment">/* Function prototypes.  */</span>
<a name="l00067"></a>00067 rf_address_t *<a class="code" href="rf_8h.html#e3faa32d6631e0b8b285b4811c8a886b">rf_address_calc</a> (<a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">rf_id_t</a> <span class="keywordtype">id</span>);
<a name="l00068"></a>00068 
<a name="l00069"></a>00069 <a class="code" href="structnrf__obj__t.html">rf_t</a> <a class="code" href="rf_8h.html#d69dcc100843fa6fede52614bd0236ae">rf_init</a> (<a class="code" href="structnrf__obj__t.html">rf_obj_t</a> *rf, <a class="code" href="structnrf__cfg__t.html">rf_cfg_t</a> *cfg);
<a name="l00070"></a>00070 
<a name="l00071"></a>00071 uint8_t <a class="code" href="rf_8h.html#956037285aaa55879999661f568ff600">rf_acknowledge_wait</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node, <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">rf_cmd_t</a> command,
<a name="l00072"></a>00072                              <a class="code" href="structtime.html">time_t</a> *timestamp);
<a name="l00073"></a>00073 
<a name="l00074"></a>00074 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#58892f995dafcb3f8c2b53a34aec0772">rf_acknowledge</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node, <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">rf_cmd_t</a> command);
<a name="l00075"></a>00075 
<a name="l00076"></a>00076 uint8_t <a class="code" href="rf_8h.html#4909c249fcff823a9d6b4c33e7dd43b5">rf_probes_enumerate</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__probe__t.html">rf_probe_t</a> *probes, uint8_t probes_max);
<a name="l00077"></a>00077 
<a name="l00078"></a>00078 <a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">rf_id_t</a> <a class="code" href="rf_8h.html#45536a63a37b0f1e7d17305217a4fa46">rf_enumeration_response</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, uint8_t *device_id, uint8_t *version);
<a name="l00079"></a>00079 
<a name="l00080"></a>00080 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#a0bcbef06b416ccbfba13e2103661070">rf_read_enable</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf);
<a name="l00081"></a>00081 
<a name="l00082"></a>00082 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#01adc101a1283b1c28cdae14cad8f12e">rf_write_setup</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node);
<a name="l00083"></a>00083 
<a name="l00084"></a>00084 <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> <a class="code" href="rf_8h.html#acdc3f2acde07cd8aaf2c74bafa4b489">rf_write</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node, uint8_t *data, <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> size);
<a name="l00085"></a>00085 
<a name="l00086"></a>00086 uint16_t <a class="code" href="rf_8h.html#1655521f0b93433976d0b96159c8145e">rf_write_data</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node, uint8_t *data,
<a name="l00087"></a>00087                         uint16_t size);
<a name="l00088"></a>00088 
<a name="l00089"></a>00089 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#a54d9003807173a3021bc01a8317f371">rf_read_setup</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node);
<a name="l00090"></a>00090 
<a name="l00091"></a>00091 <span class="keywordtype">bool</span> <a class="code" href="rf_8h.html#9f72a37abdca63675a61302d3da763a3">rf_read_ready_p</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf);
<a name="l00092"></a>00092 
<a name="l00093"></a>00093 uint16_t <a class="code" href="rf_8h.html#9626d3b4da5129feaee34fdd09b5b862">rf_read_data</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *node, uint8_t *data, uint16_t size);
<a name="l00094"></a>00094 
<a name="l00095"></a>00095 <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> <a class="code" href="rf_8h.html#fcc6741cc7766fa94f38043035f38a27">rf_read</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, uint8_t *data, <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> size, uint8_t ms_to_wait);
<a name="l00096"></a>00096 
<a name="l00097"></a>00097 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#cc7b97034be7d6a256943c26438a46d7">rf_node_make</a> (<a class="code" href="structrf__node__t.html">rf_node_t</a> *node, <a class="code" href="rf_8h.html#bcc4957db647b17909780c3acf87ac1a">rf_id_t</a> <span class="keywordtype">id</span>, <a class="code" href="rf_8h.html#7b1be9b133dc305fc907fe5ed153ea2a">rf_channel_t</a> channel);
<a name="l00098"></a>00098 
<a name="l00099"></a>00099 <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> <a class="code" href="rf_8h.html#0d04e361854817df5dc44db94b5afb49">rf_transmit</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *dst_node, uint8_t *data,
<a name="l00100"></a>00100                        <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> size);
<a name="l00101"></a>00101 
<a name="l00102"></a>00102 <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> 
<a name="l00103"></a>00103 <a class="code" href="rf_8h.html#e9f82a221ad3082cfceb08baa776eca0">rf_command</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *dst_node, <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">rf_cmd_t</a> command,
<a name="l00104"></a>00104             <span class="keywordtype">void</span> *data, <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> data_size);
<a name="l00105"></a>00105 
<a name="l00106"></a>00106 <span class="keywordtype">void</span> 
<a name="l00107"></a>00107 <a class="code" href="rf_8h.html#faafc001416241ab37f6c27344b37d45">rf_command_no_ack</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf, <a class="code" href="structrf__node__t.html">rf_node_t</a> *dst_node, <a class="code" href="rf_8h.html#07879026b5aa44b9c98a6d57d9bad80e">rf_cmd_t</a> command,
<a name="l00108"></a>00108             <span class="keywordtype">void</span> *data, <a class="code" href="rf_8h.html#4bef479c82be2f905bcea004c3a86b75">rf_size_t</a> data_size);
<a name="l00109"></a>00109 
<a name="l00110"></a>00110 <span class="comment">/* The rf chip should automatically switches into standby after</span>
<a name="l00111"></a>00111 <span class="comment"> * transmission, but the function is included so that the rf chip</span>
<a name="l00112"></a>00112 <span class="comment"> * can be forced to standby when the micro is going to sleep.  */</span>
<a name="l00113"></a>00113 <span class="keywordtype">void</span> <a class="code" href="rf_8h.html#7bf57481a71b41e35cb5d85a060735f3">rf_standby</a> (<a class="code" href="structnrf__obj__t.html">rf_t</a> rf);
<a name="l00114"></a>00114 
<a name="l00115"></a>00115 
<a name="l00116"></a>00116 
<a name="l00117"></a>00117 <span class="preprocessor">#if 0</span>
<a name="l00118"></a>00118 <span class="preprocessor"></span>
<a name="l00119"></a>00119 <span class="comment">/* There are three modes: receive, transmit, standby.  */</span>
<a name="l00120"></a>00120 
<a name="l00121"></a>00121 
<a name="l00122"></a>00122 <span class="comment">/* Switch into receive mode on specified channel and wait </span>
<a name="l00123"></a>00123 <span class="comment">   for packet targeted for specified address (or broadcast address).  */</span>
<a name="l00124"></a>00124 <a class="code" href="rf_8h.html#a54d9003807173a3021bc01a8317f371">rf_read_setup</a> ();
<a name="l00125"></a>00125 
<a name="l00126"></a>00126 <span class="comment">/* Poll for received packet.  */</span>
<a name="l00127"></a>00127 <a class="code" href="rf_8h.html#9f72a37abdca63675a61302d3da763a3">rf_read_ready_p</a> ();
<a name="l00128"></a>00128 
<a name="l00129"></a>00129 <span class="comment">/* Read packet.  */</span>
<a name="l00130"></a>00130 <a class="code" href="rf_8h.html#fcc6741cc7766fa94f38043035f38a27">rf_read</a> ();
<a name="l00131"></a>00131     
<a name="l00132"></a>00132 
<a name="l00133"></a>00133 <span class="comment">/* Switch into standby mode.  This is not necessary since the rf chip</span>
<a name="l00134"></a>00134 <span class="comment">   automatically switches into standby after transmission.  */</span>
<a name="l00135"></a>00135 <a class="code" href="rf_8h.html#7bf57481a71b41e35cb5d85a060735f3">rf_standby</a> ();
<a name="l00136"></a>00136 
<a name="l00137"></a>00137 
<a name="l00138"></a>00138 <span class="comment">/* Send packet on specified channel to specified address.  */</span>
<a name="l00139"></a>00139 <a class="code" href="rf_8h.html#acdc3f2acde07cd8aaf2c74bafa4b489">rf_write</a> (). 
<a name="l00140"></a>00140 
<a name="l00141"></a>00141 
<a name="l00142"></a>00142 <span class="comment">/* Each node is assigned an address and a channel.  A node will only</span>
<a name="l00143"></a>00143 <span class="comment">   receive a packet if it is sent on the correct channel and if</span>
<a name="l00144"></a>00144 <span class="comment">   contains its address (the destination address).</span>
<a name="l00145"></a>00145 <span class="comment"></span>
<a name="l00146"></a>00146 <span class="comment">   Currently only the master can initiate a transmission.  A slave</span>
<a name="l00147"></a>00147 <span class="comment">   acknowledges the transmission by sending an acknowledge packet</span>
<a name="l00148"></a>00148 <span class="comment">   to the well known address of the master on the channel that</span>
<a name="l00149"></a>00149 <span class="comment">   the master transmitted on.</span>
<a name="l00150"></a>00150 <span class="comment"></span>
<a name="l00151"></a>00151 <span class="comment">   To allow arbitrary packet transmission between nodes it will be</span>
<a name="l00152"></a>00152 <span class="comment">   necessary to add the source address to each packet.  This could</span>
<a name="l00153"></a>00153 <span class="comment">   just be the last byte of the address.</span>
<a name="l00154"></a>00154 <span class="comment"></span>
<a name="l00155"></a>00155 <span class="comment">   Initially the slaves listen on the well known slave broadcast</span>
<a name="l00156"></a>00156 <span class="comment">   address on the broadcast channel.  The master enumerates them by</span>
<a name="l00157"></a>00157 <span class="comment">   sending an enumerate message; the slaves respond sending a unique</span>
<a name="l00158"></a>00158 <span class="comment">   identifier until the master acknowledges receipt of the identifier</span>
<a name="l00159"></a>00159 <span class="comment">   with the address to use.  */</span>
<a name="l00160"></a>00160 
<a name="l00161"></a>00161 
<a name="l00162"></a>00162 <span class="preprocessor">#endif</span>
<a name="l00163"></a>00163 <span class="preprocessor"></span>
<a name="l00164"></a>00164 
<a name="l00165"></a>00165 
<a name="l00166"></a>00166 <span class="preprocessor">#endif</span>
</pre></div></div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue May 27 11:44:04 2008 for mmculib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
