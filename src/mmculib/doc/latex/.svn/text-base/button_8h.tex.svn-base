\hypertarget{button_8h}{
\section{button.h File Reference}
\label{button_8h}\index{button.h@{button.h}}
}
Button polling and debouncing. 

{\tt \#include \char`\"{}config.h\char`\"{}}\par
{\tt \#include \char`\"{}port.h\char`\"{}}\par
\subsection*{Data Structures}
\begin{CompactItemize}
\item 
struct \hyperlink{structbutton__cfg__t}{button\_\-cfg\_\-t}
\item 
struct \hyperlink{structbutton__private__t}{button\_\-private\_\-t}
\end{CompactItemize}
\subsection*{Defines}
\begin{CompactItemize}
\item 
\#define \hyperlink{button_8h_77bb96d722805b5e7f1d7ed21553e6a0}{BUTTON\_\-DEBOUNCE\_\-RATE}~(1000 / BUTTON\_\-DEBOUNCE\_\-MS)
\item 
\#define \hyperlink{button_8h_116491bef75d65b8a844579f8636427a}{BUTTON\_\-POLL\_\-COUNT}(POLL\_\-RATE)~((POLL\_\-RATE) / BUTTON\_\-DEBOUNCE\_\-RATE)
\item 
\#define \hyperlink{button_8h_83bc5c0e64961469df8a8eb782a59373}{BUTTON\_\-CFG}(PORT, PORTBIT)~\{(PORT), BIT (PORTBIT)\}
\end{CompactItemize}
\subsection*{Typedefs}
\begin{CompactItemize}
\item 
typedef \hyperlink{structbutton__private__t}{button\_\-private\_\-t} \hyperlink{button_8h_00e2ee58f6b2e6c9ab4d803c47c0fd74}{button\_\-obj\_\-t}
\item 
typedef \hyperlink{structbutton__private__t}{button\_\-obj\_\-t} $\ast$ \hyperlink{button_8h_c8ce99103347f6171ec91afac96e54de}{button\_\-t}
\end{CompactItemize}
\subsection*{Enumerations}
\begin{CompactItemize}
\item 
enum \{ \hyperlink{button_8h_bc6126af1d45847bc59afa0aa3216b04e5b23bf59ffcd9f2212bce2469002eb1}{BUTTON\_\-DEBOUNCE\_\-MS} =  50
 \}
\item 
enum \hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a5896}{button\_\-state\_\-t} \{ \hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a5896143e94f19e160e96a7af64b4d16317c8}{BUTTON\_\-STATE\_\-UP}, 
\hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a58966f15fb798e12419f6cd33067fd037a26}{BUTTON\_\-STATE\_\-DOWN}, 
\hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a5896d55f38d98012553d73f7aee6c3f854b1}{BUTTON\_\-STATE\_\-PUSHED}, 
\hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a58968f5bbf972d22254839750e5e0c52e92a}{BUTTON\_\-STATE\_\-RELEASED}
 \}
\end{CompactItemize}
\subsection*{Functions}
\begin{CompactItemize}
\item 
void \hyperlink{button_8h_e7cf5edcd0c1e1c45d2518bc8078fdf1}{button\_\-poll\_\-count\_\-set} (uint8\_\-t poll\_\-count)
\item 
\hyperlink{structbutton__private__t}{button\_\-t} \hyperlink{button_8h_674dcde6dc90df6df7c3073499cfcae1}{button\_\-init} (\hyperlink{structbutton__private__t}{button\_\-obj\_\-t} $\ast$obj, const \hyperlink{structbutton__cfg__t}{button\_\-cfg\_\-t} $\ast$cfg)
\item 
\hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a5896}{button\_\-state\_\-t} \hyperlink{button_8h_7baba9d1cbe31770b357179fd128b3a1}{button\_\-poll} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static \hyperlink{button_8h_7bb8494816c8065ae6ff0eeb548a5896}{button\_\-state\_\-t} \hyperlink{button_8h_fce688c1a12960a0d25be998f29e3532}{button\_\-state\_\-get} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static uint8\_\-t \hyperlink{button_8h_130f4495ba3deb616d97256c03e40db7}{button\_\-hold\_\-count\_\-get} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static bool \hyperlink{button_8h_8d1ac68ba2848bc2f063748d144162e7}{button\_\-pushed\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static bool \hyperlink{button_8h_9406205e1da7b019d790fc5e2f892703}{button\_\-released\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static bool \hyperlink{button_8h_42f5218e5ee88c31b0c6718463650811}{button\_\-down\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static bool \hyperlink{button_8h_2178489f0233e0bce64bf11592aa2ca1}{button\_\-up\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\item 
static bool \hyperlink{button_8h_80e42e0b81668130d50969684a46f474}{button\_\-held\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button, uint8\_\-t hold\_\-count)
\item 
static bool \hyperlink{button_8h_87dbbee46cfaf7c5e4c44e7747d2ddac}{button\_\-hold\_\-released\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button, uint8\_\-t hold\_\-count)
\item 
static bool \hyperlink{button_8h_a034ae1c5189f638c238b2b021f23903}{button\_\-pressed\_\-p} (\hyperlink{structbutton__private__t}{button\_\-t} button)
\end{CompactItemize}


\subsection{Detailed Description}
Button polling and debouncing. 

\begin{Desc}
\item[Author:]M. P. Hayes, UCECE \end{Desc}
\begin{Desc}
\item[Date:]15 Feb 2003 \end{Desc}


\subsection{Define Documentation}
\hypertarget{button_8h_83bc5c0e64961469df8a8eb782a59373}{
\index{button.h@{button.h}!BUTTON\_\-CFG@{BUTTON\_\-CFG}}
\index{BUTTON\_\-CFG@{BUTTON\_\-CFG}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define BUTTON\_\-CFG(PORT, \/  PORTBIT)~\{(PORT), BIT (PORTBIT)\}}}
\label{button_8h_83bc5c0e64961469df8a8eb782a59373}


\hypertarget{button_8h_77bb96d722805b5e7f1d7ed21553e6a0}{
\index{button.h@{button.h}!BUTTON\_\-DEBOUNCE\_\-RATE@{BUTTON\_\-DEBOUNCE\_\-RATE}}
\index{BUTTON\_\-DEBOUNCE\_\-RATE@{BUTTON\_\-DEBOUNCE\_\-RATE}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define BUTTON\_\-DEBOUNCE\_\-RATE~(1000 / BUTTON\_\-DEBOUNCE\_\-MS)}}
\label{button_8h_77bb96d722805b5e7f1d7ed21553e6a0}


\hypertarget{button_8h_116491bef75d65b8a844579f8636427a}{
\index{button.h@{button.h}!BUTTON\_\-POLL\_\-COUNT@{BUTTON\_\-POLL\_\-COUNT}}
\index{BUTTON\_\-POLL\_\-COUNT@{BUTTON\_\-POLL\_\-COUNT}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define BUTTON\_\-POLL\_\-COUNT(POLL\_\-RATE)~((POLL\_\-RATE) / BUTTON\_\-DEBOUNCE\_\-RATE)}}
\label{button_8h_116491bef75d65b8a844579f8636427a}




\subsection{Typedef Documentation}
\hypertarget{button_8h_00e2ee58f6b2e6c9ab4d803c47c0fd74}{
\index{button.h@{button.h}!button\_\-obj\_\-t@{button\_\-obj\_\-t}}
\index{button\_\-obj\_\-t@{button\_\-obj\_\-t}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}typedef {\bf button\_\-private\_\-t} {\bf button\_\-obj\_\-t}}}
\label{button_8h_00e2ee58f6b2e6c9ab4d803c47c0fd74}


\hypertarget{button_8h_c8ce99103347f6171ec91afac96e54de}{
\index{button.h@{button.h}!button\_\-t@{button\_\-t}}
\index{button\_\-t@{button\_\-t}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}typedef {\bf button\_\-obj\_\-t}$\ast$ {\bf button\_\-t}}}
\label{button_8h_c8ce99103347f6171ec91afac96e54de}




\subsection{Enumeration Type Documentation}
\hypertarget{button_8h_bc6126af1d45847bc59afa0aa3216b04}{
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}anonymous enum}}
\label{button_8h_bc6126af1d45847bc59afa0aa3216b04}


Debounce period in milliseconds. \begin{Desc}
\item[Enumerator: ]\par
\begin{description}
\index{BUTTON\_\-DEBOUNCE\_\-MS@{BUTTON\_\-DEBOUNCE\_\-MS}!button.h@{button.h}}\index{button.h@{button.h}!BUTTON\_\-DEBOUNCE\_\-MS@{BUTTON\_\-DEBOUNCE\_\-MS}}\item[{\em 
\hypertarget{button_8h_bc6126af1d45847bc59afa0aa3216b04e5b23bf59ffcd9f2212bce2469002eb1}{
BUTTON\_\-DEBOUNCE\_\-MS}
\label{button_8h_bc6126af1d45847bc59afa0aa3216b04e5b23bf59ffcd9f2212bce2469002eb1}
}]\end{description}
\end{Desc}

\hypertarget{button_8h_7bb8494816c8065ae6ff0eeb548a5896}{
\index{button.h@{button.h}!button\_\-state\_\-t@{button\_\-state\_\-t}}
\index{button\_\-state\_\-t@{button\_\-state\_\-t}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}enum {\bf button\_\-state\_\-t}}}
\label{button_8h_7bb8494816c8065ae6ff0eeb548a5896}


Button states. \begin{Desc}
\item[Enumerator: ]\par
\begin{description}
\index{BUTTON\_\-STATE\_\-UP@{BUTTON\_\-STATE\_\-UP}!button.h@{button.h}}\index{button.h@{button.h}!BUTTON\_\-STATE\_\-UP@{BUTTON\_\-STATE\_\-UP}}\item[{\em 
\hypertarget{button_8h_7bb8494816c8065ae6ff0eeb548a5896143e94f19e160e96a7af64b4d16317c8}{
BUTTON\_\-STATE\_\-UP}
\label{button_8h_7bb8494816c8065ae6ff0eeb548a5896143e94f19e160e96a7af64b4d16317c8}
}]\index{BUTTON\_\-STATE\_\-DOWN@{BUTTON\_\-STATE\_\-DOWN}!button.h@{button.h}}\index{button.h@{button.h}!BUTTON\_\-STATE\_\-DOWN@{BUTTON\_\-STATE\_\-DOWN}}\item[{\em 
\hypertarget{button_8h_7bb8494816c8065ae6ff0eeb548a58966f15fb798e12419f6cd33067fd037a26}{
BUTTON\_\-STATE\_\-DOWN}
\label{button_8h_7bb8494816c8065ae6ff0eeb548a58966f15fb798e12419f6cd33067fd037a26}
}]\index{BUTTON\_\-STATE\_\-PUSHED@{BUTTON\_\-STATE\_\-PUSHED}!button.h@{button.h}}\index{button.h@{button.h}!BUTTON\_\-STATE\_\-PUSHED@{BUTTON\_\-STATE\_\-PUSHED}}\item[{\em 
\hypertarget{button_8h_7bb8494816c8065ae6ff0eeb548a5896d55f38d98012553d73f7aee6c3f854b1}{
BUTTON\_\-STATE\_\-PUSHED}
\label{button_8h_7bb8494816c8065ae6ff0eeb548a5896d55f38d98012553d73f7aee6c3f854b1}
}]\index{BUTTON\_\-STATE\_\-RELEASED@{BUTTON\_\-STATE\_\-RELEASED}!button.h@{button.h}}\index{button.h@{button.h}!BUTTON\_\-STATE\_\-RELEASED@{BUTTON\_\-STATE\_\-RELEASED}}\item[{\em 
\hypertarget{button_8h_7bb8494816c8065ae6ff0eeb548a58968f5bbf972d22254839750e5e0c52e92a}{
BUTTON\_\-STATE\_\-RELEASED}
\label{button_8h_7bb8494816c8065ae6ff0eeb548a58968f5bbf972d22254839750e5e0c52e92a}
}]\end{description}
\end{Desc}



\subsection{Function Documentation}
\hypertarget{button_8h_42f5218e5ee88c31b0c6718463650811}{
\index{button.h@{button.h}!button\_\-down\_\-p@{button\_\-down\_\-p}}
\index{button\_\-down\_\-p@{button\_\-down\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-down\_\-p ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_42f5218e5ee88c31b0c6718463650811}


Return true if button down (pressed). \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button down otherwise 0 \end{Desc}


References BUTTON\_\-STATE\_\-DOWN, and button\_\-state\_\-get().

Referenced by button\_\-held\_\-p().\hypertarget{button_8h_80e42e0b81668130d50969684a46f474}{
\index{button.h@{button.h}!button\_\-held\_\-p@{button\_\-held\_\-p}}
\index{button\_\-held\_\-p@{button\_\-held\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-held\_\-p ({\bf button\_\-t} {\em button}, \/  uint8\_\-t {\em hold\_\-count})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_80e42e0b81668130d50969684a46f474}


Return true if button held for hold\_\-count. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \item[{\em hold\_\-count}]hold duration (in update periods) \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button held for specified count otherwise 0 \end{Desc}


References button\_\-down\_\-p(), and button\_\-hold\_\-count\_\-get().

Referenced by buttons\_\-held\_\-p(), and mbuttons\_\-held\_\-p().\hypertarget{button_8h_130f4495ba3deb616d97256c03e40db7}{
\index{button.h@{button.h}!button\_\-hold\_\-count\_\-get@{button\_\-hold\_\-count\_\-get}}
\index{button\_\-hold\_\-count\_\-get@{button\_\-hold\_\-count\_\-get}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static uint8\_\-t button\_\-hold\_\-count\_\-get ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_130f4495ba3deb616d97256c03e40db7}


Return duration button held (in update periods). \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]duration button held \end{Desc}


References button\_\-private\_\-t::hold\_\-count.

Referenced by button\_\-held\_\-p(), and button\_\-hold\_\-released\_\-p().\hypertarget{button_8h_87dbbee46cfaf7c5e4c44e7747d2ddac}{
\index{button.h@{button.h}!button\_\-hold\_\-released\_\-p@{button\_\-hold\_\-released\_\-p}}
\index{button\_\-hold\_\-released\_\-p@{button\_\-hold\_\-released\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-hold\_\-released\_\-p ({\bf button\_\-t} {\em button}, \/  uint8\_\-t {\em hold\_\-count})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_87dbbee46cfaf7c5e4c44e7747d2ddac}


Return true if button held for hold\_\-count has been released. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \item[{\em hold\_\-count}]hold duration (in update periods) \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button held for specified count is now released otherwise 0 \end{Desc}


References button\_\-hold\_\-count\_\-get(), and button\_\-released\_\-p().

Referenced by buttons\_\-hold\_\-released\_\-p(), and mbuttons\_\-hold\_\-released\_\-p().\hypertarget{button_8h_674dcde6dc90df6df7c3073499cfcae1}{
\index{button.h@{button.h}!button\_\-init@{button\_\-init}}
\index{button\_\-init@{button\_\-init}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}{\bf button\_\-t} button\_\-init ({\bf button\_\-obj\_\-t} $\ast$ {\em obj}, \/  const {\bf button\_\-cfg\_\-t} $\ast$ {\em cfg})}}
\label{button_8h_674dcde6dc90df6df7c3073499cfcae1}


Create a new button object. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em obj}]pointer to button structure \item[{\em cfg}]pointer to button configuration \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]pointer to button object \end{Desc}


References button\_\-cfg\_\-t::bitmask, BUTTON\_\-STATE\_\-UP, button\_\-private\_\-t::cfg, button\_\-private\_\-t::count, button\_\-private\_\-t::hold\_\-count, button\_\-cfg\_\-t::port, and button\_\-private\_\-t::state.

Referenced by buttons\_\-init(), and mbuttons\_\-init().\hypertarget{button_8h_7baba9d1cbe31770b357179fd128b3a1}{
\index{button.h@{button.h}!button\_\-poll@{button\_\-poll}}
\index{button\_\-poll@{button\_\-poll}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}{\bf button\_\-state\_\-t} button\_\-poll ({\bf button\_\-t} {\em button})}}
\label{button_8h_7baba9d1cbe31770b357179fd128b3a1}


Poll the specified button and return its debounced state. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]button state\end{Desc}
Poll the specified button and return its debounced state. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]button state \end{Desc}


References button\_\-debounce(), and button\_\-pressed\_\-p().

Referenced by buttons\_\-poll(), and mbuttons\_\-poll().\hypertarget{button_8h_e7cf5edcd0c1e1c45d2518bc8078fdf1}{
\index{button.h@{button.h}!button\_\-poll\_\-count\_\-set@{button\_\-poll\_\-count\_\-set}}
\index{button\_\-poll\_\-count\_\-set@{button\_\-poll\_\-count\_\-set}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void button\_\-poll\_\-count\_\-set (uint8\_\-t {\em poll\_\-count})}}
\label{button_8h_e7cf5edcd0c1e1c45d2518bc8078fdf1}


Set the number of polls required for the debounce period. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em poll\_\-count}]number of update periods \end{description}
\end{Desc}


References button\_\-poll\_\-count.

Referenced by buttons\_\-init(), and mbuttons\_\-init().\hypertarget{button_8h_a034ae1c5189f638c238b2b021f23903}{
\index{button.h@{button.h}!button\_\-pressed\_\-p@{button\_\-pressed\_\-p}}
\index{button\_\-pressed\_\-p@{button\_\-pressed\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-pressed\_\-p ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_a034ae1c5189f638c238b2b021f23903}


Return true if button possibly pressed. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button currently pressed otherwise 0 \end{Desc}
\begin{Desc}
\item[Note:]This is not debounced. For a debounced version use {\tt button\_\-pushed\_\-p}. \end{Desc}


References button\_\-cfg\_\-t::bitmask, button\_\-private\_\-t::cfg, and button\_\-cfg\_\-t::port.

Referenced by button\_\-poll(), and mbuttons\_\-wakeup\_\-p().\hypertarget{button_8h_8d1ac68ba2848bc2f063748d144162e7}{
\index{button.h@{button.h}!button\_\-pushed\_\-p@{button\_\-pushed\_\-p}}
\index{button\_\-pushed\_\-p@{button\_\-pushed\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-pushed\_\-p ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_8d1ac68ba2848bc2f063748d144162e7}


Return true if button pushed. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button pushed otherwise 0 \end{Desc}


References button\_\-state\_\-get(), and BUTTON\_\-STATE\_\-PUSHED.

Referenced by buttons\_\-any\_\-pushed\_\-p(), buttons\_\-pushed\_\-p(), and mbuttons\_\-pushed\_\-p().\hypertarget{button_8h_9406205e1da7b019d790fc5e2f892703}{
\index{button.h@{button.h}!button\_\-released\_\-p@{button\_\-released\_\-p}}
\index{button\_\-released\_\-p@{button\_\-released\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-released\_\-p ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_9406205e1da7b019d790fc5e2f892703}


Return true if button released. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button released otherwise 0 \end{Desc}


References button\_\-state\_\-get(), and BUTTON\_\-STATE\_\-RELEASED.

Referenced by button\_\-hold\_\-released\_\-p(), buttons\_\-released\_\-p(), and mbuttons\_\-released\_\-p().\hypertarget{button_8h_fce688c1a12960a0d25be998f29e3532}{
\index{button.h@{button.h}!button\_\-state\_\-get@{button\_\-state\_\-get}}
\index{button\_\-state\_\-get@{button\_\-state\_\-get}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static {\bf button\_\-state\_\-t} button\_\-state\_\-get ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_fce688c1a12960a0d25be998f29e3532}


Return button state. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]button state \end{Desc}


References button\_\-private\_\-t::state.

Referenced by button\_\-down\_\-p(), button\_\-pushed\_\-p(), button\_\-released\_\-p(), button\_\-up\_\-p(), and mbuttons\_\-any\_\-state\_\-p().\hypertarget{button_8h_2178489f0233e0bce64bf11592aa2ca1}{
\index{button.h@{button.h}!button\_\-up\_\-p@{button\_\-up\_\-p}}
\index{button\_\-up\_\-p@{button\_\-up\_\-p}!button.h@{button.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool button\_\-up\_\-p ({\bf button\_\-t} {\em button})\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{button_8h_2178489f0233e0bce64bf11592aa2ca1}


Return true if button up. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em button}]pointer to button object \end{description}
\end{Desc}
\begin{Desc}
\item[Returns:]1 if button down otherwise 0 \end{Desc}


References button\_\-state\_\-get(), and BUTTON\_\-STATE\_\-UP.