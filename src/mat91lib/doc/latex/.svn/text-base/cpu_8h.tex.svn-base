\hypertarget{cpu_8h}{
\section{cpu.h File Reference}
\label{cpu_8h}\index{cpu.h@{cpu.h}}
}
{\tt \#include \char`\"{}config.h\char`\"{}}\par
{\tt \#include \char`\"{}irq.h\char`\"{}}\par
{\tt \#include \char`\"{}bits.h\char`\"{}}\par
\subsection*{Defines}
\begin{CompactItemize}
\item 
\#define \hyperlink{cpu_8h_a29ab10c30b414be12ae618a3f90aa1c}{CPU\_\-FLASH\_\-SPEED}~30e6
\item 
\#define \hyperlink{cpu_8h_d3e094d48053286c085414136afea2c7}{CPU\_\-FLASH\_\-READ\_\-CYCLES}~1
\item 
\#define \hyperlink{cpu_8h_2ecf1d4f04959ecdb69875fb0e36e621}{CPU\_\-MODE\_\-MASK}~0x1f
\item 
\#define \hyperlink{cpu_8h_e273bcfa0f7c66508cdfa5e847c81008}{cpu\_\-cpsr\_\-c\_\-set\_\-const}(cpsr)~\_\-\_\-asm\_\-\_\- (\char`\"{}$\backslash$tmsr CPSR\_\-c, \%0\char`\"{} : : \char`\"{}i\char`\"{} (cpsr))
\item 
\#define \hyperlink{cpu_8h_f95f764171696f885af7d5ad5e51297f}{F\_\-SLCK}~32768
\item 
\#define \hyperlink{cpu_8h_1c85ebcccafdd79c1b8cde66102e15f8}{CPU\_\-OS\_\-DELAY}~1.5e-3
\item 
\#define \hyperlink{cpu_8h_ae7db0ac3be54568c276149e1186a9a9}{CPU\_\-OS\_\-COUNT}~((uint16\_\-t) (CPU\_\-OS\_\-DELAY $\ast$ F\_\-SLCK + 7)) / 8
\item 
\#define \hyperlink{cpu_8h_431545043ea6fd93d472a2dd41384dbc}{CPU\_\-PLL\_\-DELAY}~0.9e-3
\item 
\#define \hyperlink{cpu_8h_0e76a91bb8f8aba29f096018d7dc13f9}{CPU\_\-PLL\_\-COUNT}~(uint16\_\-t) (CPU\_\-PLL\_\-DELAY $\ast$ F\_\-SLCK)
\item 
\#define \hyperlink{cpu_8h_f999d49621875cf8998ab753b0dd073a}{CPU\_\-USB\_\-LOG2\_\-DIV}~0
\end{CompactItemize}
\subsection*{Enumerations}
\begin{CompactItemize}
\item 
enum \hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3}{arm\_\-mode\_\-t} \{ \par
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922}{CPU\_\-MODE\_\-USR} =  0x10, 
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d}{CPU\_\-MODE\_\-FIQ} =  0x11, 
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f}{CPU\_\-MODE\_\-IRQ} =  0x12, 
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538}{CPU\_\-MODE\_\-SVC} =  0x13, 
\par
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577}{CPU\_\-MODE\_\-ABT} =  0x17, 
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820}{CPU\_\-MODE\_\-UND} =  0x1b, 
\hyperlink{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3}{CPU\_\-MODE\_\-SYS} =  0x1f
 \}
\item 
enum \{ \hyperlink{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f}{CPU\_\-T\_\-BIT} =  BIT (5), 
\hyperlink{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957}{CPU\_\-F\_\-BIT} =  BIT (6), 
\hyperlink{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58}{CPU\_\-I\_\-BIT} =  BIT (7)
 \}
\end{CompactItemize}
\subsection*{Functions}
\begin{CompactItemize}
\item 
\_\-\_\-inline \hyperlink{cpu_8h_f632ecf4ed74ecf285b4aacf406f8f6d}{\_\-\_\-attribute\_\-\_\-} ((always\_\-inline)) void cpu\_\-sp\_\-set(uint32\_\-t val)
\item 
\_\-\_\-inline void \hyperlink{cpu_8h_2fce4754c55276f86960163dc26b86f9}{cpu\_\-sram\_\-remap} (void)
\item 
\_\-\_\-inline void \hyperlink{cpu_8h_5f0bfcd3af2b0d67ce7c436299d11a51}{cpu\_\-sram\_\-unremap} (void)
\item 
\_\-\_\-inline void \hyperlink{cpu_8h_ec9330e16bf3cc611660796b9da475d7}{cpu\_\-watchdog\_\-disable} (void)
\item 
static void \hyperlink{cpu_8h_c9c3a47ef079a99be4a6094613324801}{cpu\_\-flash\_\-init} (void)
\item 
static void \hyperlink{cpu_8h_bc08e828b40765f1f33626b742c526d3}{cpu\_\-clock\_\-init} (void)
\item 
static void \hyperlink{cpu_8h_a8cc514a5cebd91bd86deb4db7c49572}{cpu\_\-idle} (void)
\item 
static void \hyperlink{cpu_8h_2ef7f46934323f0d3b33755b4700d21c}{cpu\_\-reset} (void)
\item 
static void \hyperlink{cpu_8h_0f8361e6bcdb71d246f7de7d2e34e42e}{cpu\_\-reset\_\-enable} (void)
\item 
static void \hyperlink{cpu_8h_f8e65dcaae23c3c2d8d5498613836c53}{cpu\_\-reset\_\-disable} (void)
\item 
static uint8\_\-t \hyperlink{cpu_8h_8943b698ee1a5bad8cd8ae49eca4850a}{cpu\_\-reset\_\-type\_\-get} (void)
\item 
static bool \hyperlink{cpu_8h_c638104994711da4e61450457e84571b}{cpu\_\-brownout\_\-detect\_\-get} (void)
\item 
static bool \hyperlink{cpu_8h_0e26fd07d602e1ee1bbd66622152e929}{cpu\_\-reset\_\-detect\_\-get} (void)
\item 
void \hyperlink{cpu_8h_1df1e0dd612db3618069ccdcf8b9341e}{\_\-irq\_\-unexpected\_\-handler} (void)
\item 
void \hyperlink{cpu_8h_aa5f561a0cda90797fd82dadb2c2e320}{\_\-irq\_\-spurious\_\-handler} (void)
\item 
static void \hyperlink{cpu_8h_afe326016bd7ada65717f5494214c92c}{cpu\_\-init} (void)
\item 
static void \hyperlink{cpu_8h_e3bf64ee167aebcec01f2c76eeb056b2}{cpu\_\-sleep} (void)
\end{CompactItemize}


\subsection{Define Documentation}
\hypertarget{cpu_8h_e273bcfa0f7c66508cdfa5e847c81008}{
\index{cpu.h@{cpu.h}!cpu\_\-cpsr\_\-c\_\-set\_\-const@{cpu\_\-cpsr\_\-c\_\-set\_\-const}}
\index{cpu\_\-cpsr\_\-c\_\-set\_\-const@{cpu\_\-cpsr\_\-c\_\-set\_\-const}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define cpu\_\-cpsr\_\-c\_\-set\_\-const(cpsr)~\_\-\_\-asm\_\-\_\- (\char`\"{}$\backslash$tmsr CPSR\_\-c, \%0\char`\"{} : : \char`\"{}i\char`\"{} (cpsr))}}
\label{cpu_8h_e273bcfa0f7c66508cdfa5e847c81008}


Set the control bits, I, F, T, and M\mbox{[}4:0\mbox{]}. This only works for a constant argument. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em CPSR}]control bit mask. \end{description}
\end{Desc}


Referenced by \_\-irq\_\-handler(), \_\-reset\_\-handler(), and start().\hypertarget{cpu_8h_d3e094d48053286c085414136afea2c7}{
\index{cpu.h@{cpu.h}!CPU\_\-FLASH\_\-READ\_\-CYCLES@{CPU\_\-FLASH\_\-READ\_\-CYCLES}}
\index{CPU\_\-FLASH\_\-READ\_\-CYCLES@{CPU\_\-FLASH\_\-READ\_\-CYCLES}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-FLASH\_\-READ\_\-CYCLES~1}}
\label{cpu_8h_d3e094d48053286c085414136afea2c7}




Referenced by cpu\_\-flash\_\-init().\hypertarget{cpu_8h_a29ab10c30b414be12ae618a3f90aa1c}{
\index{cpu.h@{cpu.h}!CPU\_\-FLASH\_\-SPEED@{CPU\_\-FLASH\_\-SPEED}}
\index{CPU\_\-FLASH\_\-SPEED@{CPU\_\-FLASH\_\-SPEED}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-FLASH\_\-SPEED~30e6}}
\label{cpu_8h_a29ab10c30b414be12ae618a3f90aa1c}


\hypertarget{cpu_8h_2ecf1d4f04959ecdb69875fb0e36e621}{
\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-MASK@{CPU\_\-MODE\_\-MASK}}
\index{CPU\_\-MODE\_\-MASK@{CPU\_\-MODE\_\-MASK}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-MODE\_\-MASK~0x1f}}
\label{cpu_8h_2ecf1d4f04959ecdb69875fb0e36e621}


\hypertarget{cpu_8h_ae7db0ac3be54568c276149e1186a9a9}{
\index{cpu.h@{cpu.h}!CPU\_\-OS\_\-COUNT@{CPU\_\-OS\_\-COUNT}}
\index{CPU\_\-OS\_\-COUNT@{CPU\_\-OS\_\-COUNT}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-OS\_\-COUNT~((uint16\_\-t) (CPU\_\-OS\_\-DELAY $\ast$ F\_\-SLCK + 7)) / 8}}
\label{cpu_8h_ae7db0ac3be54568c276149e1186a9a9}




Referenced by cpu\_\-clock\_\-init().\hypertarget{cpu_8h_1c85ebcccafdd79c1b8cde66102e15f8}{
\index{cpu.h@{cpu.h}!CPU\_\-OS\_\-DELAY@{CPU\_\-OS\_\-DELAY}}
\index{CPU\_\-OS\_\-DELAY@{CPU\_\-OS\_\-DELAY}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-OS\_\-DELAY~1.5e-3}}
\label{cpu_8h_1c85ebcccafdd79c1b8cde66102e15f8}


\hypertarget{cpu_8h_0e76a91bb8f8aba29f096018d7dc13f9}{
\index{cpu.h@{cpu.h}!CPU\_\-PLL\_\-COUNT@{CPU\_\-PLL\_\-COUNT}}
\index{CPU\_\-PLL\_\-COUNT@{CPU\_\-PLL\_\-COUNT}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-PLL\_\-COUNT~(uint16\_\-t) (CPU\_\-PLL\_\-DELAY $\ast$ F\_\-SLCK)}}
\label{cpu_8h_0e76a91bb8f8aba29f096018d7dc13f9}




Referenced by cpu\_\-clock\_\-init().\hypertarget{cpu_8h_431545043ea6fd93d472a2dd41384dbc}{
\index{cpu.h@{cpu.h}!CPU\_\-PLL\_\-DELAY@{CPU\_\-PLL\_\-DELAY}}
\index{CPU\_\-PLL\_\-DELAY@{CPU\_\-PLL\_\-DELAY}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-PLL\_\-DELAY~0.9e-3}}
\label{cpu_8h_431545043ea6fd93d472a2dd41384dbc}


\hypertarget{cpu_8h_f999d49621875cf8998ab753b0dd073a}{
\index{cpu.h@{cpu.h}!CPU\_\-USB\_\-LOG2\_\-DIV@{CPU\_\-USB\_\-LOG2\_\-DIV}}
\index{CPU\_\-USB\_\-LOG2\_\-DIV@{CPU\_\-USB\_\-LOG2\_\-DIV}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define CPU\_\-USB\_\-LOG2\_\-DIV~0}}
\label{cpu_8h_f999d49621875cf8998ab753b0dd073a}




Referenced by cpu\_\-clock\_\-init().\hypertarget{cpu_8h_f95f764171696f885af7d5ad5e51297f}{
\index{cpu.h@{cpu.h}!F\_\-SLCK@{F\_\-SLCK}}
\index{F\_\-SLCK@{F\_\-SLCK}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\#define F\_\-SLCK~32768}}
\label{cpu_8h_f95f764171696f885af7d5ad5e51297f}




\subsection{Enumeration Type Documentation}
\hypertarget{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7}{
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}anonymous enum}}
\label{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7}


Current processor status register (CPSR) bits. \begin{Desc}
\item[Enumerator: ]\par
\begin{description}
\index{CPU\_\-T\_\-BIT@{CPU\_\-T\_\-BIT}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-T\_\-BIT@{CPU\_\-T\_\-BIT}}\item[{\em 
\hypertarget{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f}{
CPU\_\-T\_\-BIT}
\label{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f}
}]\index{CPU\_\-F\_\-BIT@{CPU\_\-F\_\-BIT}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-F\_\-BIT@{CPU\_\-F\_\-BIT}}\item[{\em 
\hypertarget{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957}{
CPU\_\-F\_\-BIT}
\label{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957}
}]Thumb mode \index{CPU\_\-I\_\-BIT@{CPU\_\-I\_\-BIT}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-I\_\-BIT@{CPU\_\-I\_\-BIT}}\item[{\em 
\hypertarget{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58}{
CPU\_\-I\_\-BIT}
\label{cpu_8h_df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58}
}]Disable FIQ interrupts \end{description}
\end{Desc}

\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3}{
\index{cpu.h@{cpu.h}!arm\_\-mode\_\-t@{arm\_\-mode\_\-t}}
\index{arm\_\-mode\_\-t@{arm\_\-mode\_\-t}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}enum {\bf arm\_\-mode\_\-t}}}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3}


The ARM7 has 7 processor modes: user, system, supervisor, abort, undefined, interrupt, and fast interrupt. All except user mode are privileged modes and all except user and system modes are exception modes.

System mode is like user mode (it uses the user mode registers) but has full supervisor mode priviledges. System mode is usually switched from supervisor mode to access user mode registers, etc. Since system mode has full priviledges it is possible to switch back from system to supervisor mode. Once in user mode the only way the mode can be changed is with an interrupt.

User mode is typically used for user applications and supervisor mode is typically used by the operating system (kernel mode). Without memory management many operating systems (such as ecos) will use supervisor mode for everything to reduce the overhead of switching modes.

Each mode (except system) has their own banked copies of R13 (link register) and R14 (stack pointer) so there can be separate stacks for each mode. FIQ mode also has banked copies of R8--R12 for fast context switching. \begin{Desc}
\item[Enumerator: ]\par
\begin{description}
\index{CPU\_\-MODE\_\-USR@{CPU\_\-MODE\_\-USR}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-USR@{CPU\_\-MODE\_\-USR}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922}{
CPU\_\-MODE\_\-USR}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922}
}]\index{CPU\_\-MODE\_\-FIQ@{CPU\_\-MODE\_\-FIQ}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-FIQ@{CPU\_\-MODE\_\-FIQ}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d}{
CPU\_\-MODE\_\-FIQ}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d}
}]User mode \index{CPU\_\-MODE\_\-IRQ@{CPU\_\-MODE\_\-IRQ}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-IRQ@{CPU\_\-MODE\_\-IRQ}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f}{
CPU\_\-MODE\_\-IRQ}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f}
}]Fast interrupt mode \index{CPU\_\-MODE\_\-SVC@{CPU\_\-MODE\_\-SVC}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-SVC@{CPU\_\-MODE\_\-SVC}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538}{
CPU\_\-MODE\_\-SVC}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538}
}]Interrupt mode \index{CPU\_\-MODE\_\-ABT@{CPU\_\-MODE\_\-ABT}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-ABT@{CPU\_\-MODE\_\-ABT}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577}{
CPU\_\-MODE\_\-ABT}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577}
}]Supervisor mode \index{CPU\_\-MODE\_\-UND@{CPU\_\-MODE\_\-UND}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-UND@{CPU\_\-MODE\_\-UND}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820}{
CPU\_\-MODE\_\-UND}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820}
}]Abort mode \index{CPU\_\-MODE\_\-SYS@{CPU\_\-MODE\_\-SYS}!cpu.h@{cpu.h}}\index{cpu.h@{cpu.h}!CPU\_\-MODE\_\-SYS@{CPU\_\-MODE\_\-SYS}}\item[{\em 
\hypertarget{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3}{
CPU\_\-MODE\_\-SYS}
\label{cpu_8h_eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3}
}]Undefined mode \end{description}
\end{Desc}



\subsection{Function Documentation}
\hypertarget{cpu_8h_f632ecf4ed74ecf285b4aacf406f8f6d}{
\index{cpu.h@{cpu.h}!\_\-\_\-attribute\_\-\_\-@{\_\-\_\-attribute\_\-\_\-}}
\index{\_\-\_\-attribute\_\-\_\-@{\_\-\_\-attribute\_\-\_\-}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\_\-\_\-inline \_\-\_\-attribute\_\-\_\- ((always\_\-inline))}}
\label{cpu_8h_f632ecf4ed74ecf285b4aacf406f8f6d}


Set the stack pointer of the current mode \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em stack}]pointer initial value.\end{description}
\end{Desc}
Set the control bits, I, F, T, and M\mbox{[}4:0\mbox{]} of the CPSR. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em CPSR}]control bit mask.\end{description}
\end{Desc}
Set the flag bits of the CPSR. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em CPSR}]flag bits mask.\end{description}
\end{Desc}
Set all the fields of CPSR (note the s and x fields are currently unused). \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em CPSR.}]\end{description}
\end{Desc}
Get the CPSR (all fields). \begin{Desc}
\item[Returns:]CPSR.\end{Desc}
Set the mode bits M\mbox{[}4:0\mbox{]} of the CPSR. \begin{Desc}
\item[Parameters:]
\begin{description}
\item[{\em CPSR}]mode bits mask.\end{description}
\end{Desc}
Get the SPSR (all fields). \begin{Desc}
\item[Returns:]SPSR. \end{Desc}
\hypertarget{cpu_8h_aa5f561a0cda90797fd82dadb2c2e320}{
\index{cpu.h@{cpu.h}!\_\-irq\_\-spurious\_\-handler@{\_\-irq\_\-spurious\_\-handler}}
\index{\_\-irq\_\-spurious\_\-handler@{\_\-irq\_\-spurious\_\-handler}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void \_\-irq\_\-spurious\_\-handler (void)}}
\label{cpu_8h_aa5f561a0cda90797fd82dadb2c2e320}


Dummy ISR for spurious interrupts. 

Referenced by cpu\_\-init().\hypertarget{cpu_8h_1df1e0dd612db3618069ccdcf8b9341e}{
\index{cpu.h@{cpu.h}!\_\-irq\_\-unexpected\_\-handler@{\_\-irq\_\-unexpected\_\-handler}}
\index{\_\-irq\_\-unexpected\_\-handler@{\_\-irq\_\-unexpected\_\-handler}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}void \_\-irq\_\-unexpected\_\-handler (void)}}
\label{cpu_8h_1df1e0dd612db3618069ccdcf8b9341e}


Dummy ISR for unexpected interrupts. 

Referenced by cpu\_\-init().\hypertarget{cpu_8h_c638104994711da4e61450457e84571b}{
\index{cpu.h@{cpu.h}!cpu\_\-brownout\_\-detect\_\-get@{cpu\_\-brownout\_\-detect\_\-get}}
\index{cpu\_\-brownout\_\-detect\_\-get@{cpu\_\-brownout\_\-detect\_\-get}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool cpu\_\-brownout\_\-detect\_\-get (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_c638104994711da4e61450457e84571b}




References AT91C\_\-BASE\_\-RSTC, and AT91C\_\-RSTC\_\-BODSTS.\hypertarget{cpu_8h_bc08e828b40765f1f33626b742c526d3}{
\index{cpu.h@{cpu.h}!cpu\_\-clock\_\-init@{cpu\_\-clock\_\-init}}
\index{cpu\_\-clock\_\-init@{cpu\_\-clock\_\-init}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-clock\_\-init (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_bc08e828b40765f1f33626b742c526d3}


Set up the main clock (MAINCK), PLL clock, and master clock (MCK). 

References AT91C\_\-BASE\_\-PMC, AT91C\_\-CKGR\_\-MOSCEN, AT91C\_\-PMC\_\-CSS\_\-PLL\_\-CLK, AT91C\_\-PMC\_\-LOCK, AT91C\_\-PMC\_\-MCKRDY, AT91C\_\-PMC\_\-MOSCS, AT91C\_\-PMC\_\-PRES\_\-CLK\_\-2, BITS, CPU\_\-OS\_\-COUNT, CPU\_\-PLL\_\-COUNT, and CPU\_\-USB\_\-LOG2\_\-DIV.\hypertarget{cpu_8h_c9c3a47ef079a99be4a6094613324801}{
\index{cpu.h@{cpu.h}!cpu\_\-flash\_\-init@{cpu\_\-flash\_\-init}}
\index{cpu\_\-flash\_\-init@{cpu\_\-flash\_\-init}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-flash\_\-init (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_c9c3a47ef079a99be4a6094613324801}


Initialise flash memory controller. 

References AT91C\_\-BASE\_\-MC, AT91C\_\-MC\_\-FWS\_\-0FWS, AT91C\_\-MC\_\-FWS\_\-1FWS, AT91C\_\-MC\_\-FWS\_\-2FWS, AT91C\_\-MC\_\-FWS\_\-3FWS, BITS\_\-INSERT, and CPU\_\-FLASH\_\-READ\_\-CYCLES.\hypertarget{cpu_8h_a8cc514a5cebd91bd86deb4db7c49572}{
\index{cpu.h@{cpu.h}!cpu\_\-idle@{cpu\_\-idle}}
\index{cpu\_\-idle@{cpu\_\-idle}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-idle (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_a8cc514a5cebd91bd86deb4db7c49572}




References AT91C\_\-BASE\_\-PMC, and AT91C\_\-PMC\_\-PCK.

Referenced by cpu\_\-sleep().\hypertarget{cpu_8h_afe326016bd7ada65717f5494214c92c}{
\index{cpu.h@{cpu.h}!cpu\_\-init@{cpu\_\-init}}
\index{cpu\_\-init@{cpu\_\-init}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-init (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_afe326016bd7ada65717f5494214c92c}


Initialise flash, disable watchdog, set up clocks. 

References \_\-irq\_\-spurious\_\-handler(), \_\-irq\_\-unexpected\_\-handler(), AT91C\_\-BASE\_\-AIC, cpu\_\-clock\_\-init(), cpu\_\-flash\_\-init(), cpu\_\-reset\_\-enable(), cpu\_\-sram\_\-remap(), cpu\_\-watchdog\_\-disable(), IRQ\_\-ID\_\-MAX, IRQ\_\-ID\_\-MIN, and irq\_\-vector\_\-set().\hypertarget{cpu_8h_2ef7f46934323f0d3b33755b4700d21c}{
\index{cpu.h@{cpu.h}!cpu\_\-reset@{cpu\_\-reset}}
\index{cpu\_\-reset@{cpu\_\-reset}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-reset (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_2ef7f46934323f0d3b33755b4700d21c}




References AT91C\_\-BASE\_\-RSTC, AT91C\_\-RSTC\_\-PERRST, and AT91C\_\-RSTC\_\-PROCRST.\hypertarget{cpu_8h_0e26fd07d602e1ee1bbd66622152e929}{
\index{cpu.h@{cpu.h}!cpu\_\-reset\_\-detect\_\-get@{cpu\_\-reset\_\-detect\_\-get}}
\index{cpu\_\-reset\_\-detect\_\-get@{cpu\_\-reset\_\-detect\_\-get}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static bool cpu\_\-reset\_\-detect\_\-get (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_0e26fd07d602e1ee1bbd66622152e929}




References AT91C\_\-BASE\_\-RSTC, and AT91C\_\-RSTC\_\-URSTS.\hypertarget{cpu_8h_f8e65dcaae23c3c2d8d5498613836c53}{
\index{cpu.h@{cpu.h}!cpu\_\-reset\_\-disable@{cpu\_\-reset\_\-disable}}
\index{cpu\_\-reset\_\-disable@{cpu\_\-reset\_\-disable}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-reset\_\-disable (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_f8e65dcaae23c3c2d8d5498613836c53}




References AT91C\_\-BASE\_\-RSTC, and AT91C\_\-RSTC\_\-URSTEN.\hypertarget{cpu_8h_0f8361e6bcdb71d246f7de7d2e34e42e}{
\index{cpu.h@{cpu.h}!cpu\_\-reset\_\-enable@{cpu\_\-reset\_\-enable}}
\index{cpu\_\-reset\_\-enable@{cpu\_\-reset\_\-enable}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-reset\_\-enable (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_0f8361e6bcdb71d246f7de7d2e34e42e}




References AT91C\_\-BASE\_\-RSTC, and AT91C\_\-RSTC\_\-URSTEN.

Referenced by cpu\_\-init().\hypertarget{cpu_8h_8943b698ee1a5bad8cd8ae49eca4850a}{
\index{cpu.h@{cpu.h}!cpu\_\-reset\_\-type\_\-get@{cpu\_\-reset\_\-type\_\-get}}
\index{cpu\_\-reset\_\-type\_\-get@{cpu\_\-reset\_\-type\_\-get}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static uint8\_\-t cpu\_\-reset\_\-type\_\-get (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_8943b698ee1a5bad8cd8ae49eca4850a}




References AT91C\_\-BASE\_\-RSTC.\hypertarget{cpu_8h_e3bf64ee167aebcec01f2c76eeb056b2}{
\index{cpu.h@{cpu.h}!cpu\_\-sleep@{cpu\_\-sleep}}
\index{cpu\_\-sleep@{cpu\_\-sleep}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}static void cpu\_\-sleep (void)\hspace{0.3cm}{\tt  \mbox{[}static\mbox{]}}}}
\label{cpu_8h_e3bf64ee167aebcec01f2c76eeb056b2}




References cpu\_\-idle().\hypertarget{cpu_8h_2fce4754c55276f86960163dc26b86f9}{
\index{cpu.h@{cpu.h}!cpu\_\-sram\_\-remap@{cpu\_\-sram\_\-remap}}
\index{cpu\_\-sram\_\-remap@{cpu\_\-sram\_\-remap}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\_\-\_\-inline void cpu\_\-sram\_\-remap (void)}}
\label{cpu_8h_2fce4754c55276f86960163dc26b86f9}


Remap SRAM that SRAM exists at 0x200000 as well as at 0x000000. On reset the Flash at 0x100000 is mapped to address 0x00000 as well as 0x100000. Note writing to the remap bit a second time toggles the remapping so that the Flash appears at address 0x000000. This causes problems if running from the debugger since theCPU is not reset. Thus we don't toggle the remap bit if the SRAM is already remapped. 

References AT91C\_\-BASE\_\-MC, AT91C\_\-ISRAM, and AT91C\_\-MC\_\-RCB.

Referenced by cpu\_\-init().\hypertarget{cpu_8h_5f0bfcd3af2b0d67ce7c436299d11a51}{
\index{cpu.h@{cpu.h}!cpu\_\-sram\_\-unremap@{cpu\_\-sram\_\-unremap}}
\index{cpu\_\-sram\_\-unremap@{cpu\_\-sram\_\-unremap}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\_\-\_\-inline void cpu\_\-sram\_\-unremap (void)}}
\label{cpu_8h_5f0bfcd3af2b0d67ce7c436299d11a51}


Unremap SRAM. 

References AT91C\_\-BASE\_\-MC, AT91C\_\-ISRAM, and AT91C\_\-MC\_\-RCB.\hypertarget{cpu_8h_ec9330e16bf3cc611660796b9da475d7}{
\index{cpu.h@{cpu.h}!cpu\_\-watchdog\_\-disable@{cpu\_\-watchdog\_\-disable}}
\index{cpu\_\-watchdog\_\-disable@{cpu\_\-watchdog\_\-disable}!cpu.h@{cpu.h}}
\subsubsection{\setlength{\rightskip}{0pt plus 5cm}\_\-\_\-inline void cpu\_\-watchdog\_\-disable (void)}}
\label{cpu_8h_ec9330e16bf3cc611660796b9da475d7}


Disable watchdog. 

References AT91C\_\-BASE\_\-WDTC, and AT91C\_\-WDTC\_\-WDDIS.

Referenced by cpu\_\-init().