<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>mmculib: cpu.h File Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.5 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>cpu.h File Reference</h1><code>#include &quot;config.h&quot;</code><br>
<code>#include &quot;<a class="el" href="irq_8h-source.html">irq.h</a>&quot;</code><br>
<code>#include &quot;<a class="el" href="bits_8h-source.html">bits.h</a>&quot;</code><br>

<p>
<a href="cpu_8h-source.html">Go to the source code of this file.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#a29ab10c30b414be12ae618a3f90aa1c">CPU_FLASH_SPEED</a>&nbsp;&nbsp;&nbsp;30e6</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#d3e094d48053286c085414136afea2c7">CPU_FLASH_READ_CYCLES</a>&nbsp;&nbsp;&nbsp;1</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#2ecf1d4f04959ecdb69875fb0e36e621">CPU_MODE_MASK</a>&nbsp;&nbsp;&nbsp;0x1f</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#e273bcfa0f7c66508cdfa5e847c81008">cpu_cpsr_c_set_const</a>(cpsr)&nbsp;&nbsp;&nbsp;__asm__ (&quot;\tmsr CPSR_c, %0&quot; : : &quot;i&quot; (cpsr))</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#f95f764171696f885af7d5ad5e51297f">F_SLCK</a>&nbsp;&nbsp;&nbsp;32768</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#1c85ebcccafdd79c1b8cde66102e15f8">CPU_OS_DELAY</a>&nbsp;&nbsp;&nbsp;1.5e-3</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#ae7db0ac3be54568c276149e1186a9a9">CPU_OS_COUNT</a>&nbsp;&nbsp;&nbsp;((uint16_t) (CPU_OS_DELAY * F_SLCK + 7)) / 8</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#431545043ea6fd93d472a2dd41384dbc">CPU_PLL_DELAY</a>&nbsp;&nbsp;&nbsp;0.9e-3</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#0e76a91bb8f8aba29f096018d7dc13f9">CPU_PLL_COUNT</a>&nbsp;&nbsp;&nbsp;(uint16_t) (CPU_PLL_DELAY * F_SLCK)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#f999d49621875cf8998ab753b0dd073a">CPU_USB_LOG2_DIV</a>&nbsp;&nbsp;&nbsp;0</td></tr>

<tr><td colspan="2"><br><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3">arm_mode_t</a> { <br>
&nbsp;&nbsp;<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922">CPU_MODE_USR</a> =  0x10, 
<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d">CPU_MODE_FIQ</a> =  0x11, 
<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f">CPU_MODE_IRQ</a> =  0x12, 
<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538">CPU_MODE_SVC</a> =  0x13, 
<br>
&nbsp;&nbsp;<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577">CPU_MODE_ABT</a> =  0x17, 
<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820">CPU_MODE_UND</a> =  0x1b, 
<a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3">CPU_MODE_SYS</a> =  0x1f
<br>
 }</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom">{ <a class="el" href="cpu_8h.html#df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f">CPU_T_BIT</a> =  BIT (5), 
<a class="el" href="cpu_8h.html#df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957">CPU_F_BIT</a> =  BIT (6), 
<a class="el" href="cpu_8h.html#df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58">CPU_I_BIT</a> =  BIT (7)
 }</td></tr>

<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">__inline&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#f632ecf4ed74ecf285b4aacf406f8f6d">__attribute__</a> ((always_inline)) void cpu_sp_set(uint32_t val)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">__inline void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#2fce4754c55276f86960163dc26b86f9">cpu_sram_remap</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">__inline void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#5f0bfcd3af2b0d67ce7c436299d11a51">cpu_sram_unremap</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">__inline void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#ec9330e16bf3cc611660796b9da475d7">cpu_watchdog_disable</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#c9c3a47ef079a99be4a6094613324801">cpu_flash_init</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#bc08e828b40765f1f33626b742c526d3">cpu_clock_init</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#a8cc514a5cebd91bd86deb4db7c49572">cpu_idle</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#2ef7f46934323f0d3b33755b4700d21c">cpu_reset</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#0f8361e6bcdb71d246f7de7d2e34e42e">cpu_reset_enable</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#f8e65dcaae23c3c2d8d5498613836c53">cpu_reset_disable</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static uint8_t&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#8943b698ee1a5bad8cd8ae49eca4850a">cpu_reset_type_get</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#c638104994711da4e61450457e84571b">cpu_brownout_detect_get</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#0e26fd07d602e1ee1bbd66622152e929">cpu_reset_detect_get</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#1df1e0dd612db3618069ccdcf8b9341e">_irq_unexpected_handler</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#aa5f561a0cda90797fd82dadb2c2e320">_irq_spurious_handler</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#afe326016bd7ada65717f5494214c92c">cpu_init</a> (void)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">static void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="cpu_8h.html#e3bf64ee167aebcec01f2c76eeb056b2">cpu_sleep</a> (void)</td></tr>

</table>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="e273bcfa0f7c66508cdfa5e847c81008"></a><!-- doxytag: member="cpu.h::cpu_cpsr_c_set_const" ref="e273bcfa0f7c66508cdfa5e847c81008" args="(cpsr)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define cpu_cpsr_c_set_const          </td>
          <td>(</td>
          <td class="paramtype">cpsr&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%">&nbsp;&nbsp;&nbsp;__asm__ (&quot;\tmsr CPSR_c, %0&quot; : : &quot;i&quot; (cpsr))</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the control bits, I, F, T, and M[4:0]. This only works for a constant argument. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CPSR</em>&nbsp;</td><td>control bit mask. </td></tr>
  </table>
</dl>

<p>Referenced by <a class="el" href="boot__freertos_8c-source.html#l00172">_irq_handler()</a>, <a class="el" href="boot__freertos_8c-source.html#l00105">_reset_handler()</a>, and <a class="el" href="boot__freertos_8c-source.html#l00050">start()</a>.</p>

</div>
</div><p>
<a class="anchor" name="d3e094d48053286c085414136afea2c7"></a><!-- doxytag: member="cpu.h::CPU_FLASH_READ_CYCLES" ref="d3e094d48053286c085414136afea2c7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_FLASH_READ_CYCLES&nbsp;&nbsp;&nbsp;1          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00218">cpu_flash_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="a29ab10c30b414be12ae618a3f90aa1c"></a><!-- doxytag: member="cpu.h::CPU_FLASH_SPEED" ref="a29ab10c30b414be12ae618a3f90aa1c" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_FLASH_SPEED&nbsp;&nbsp;&nbsp;30e6          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="2ecf1d4f04959ecdb69875fb0e36e621"></a><!-- doxytag: member="cpu.h::CPU_MODE_MASK" ref="2ecf1d4f04959ecdb69875fb0e36e621" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_MODE_MASK&nbsp;&nbsp;&nbsp;0x1f          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="ae7db0ac3be54568c276149e1186a9a9"></a><!-- doxytag: member="cpu.h::CPU_OS_COUNT" ref="ae7db0ac3be54568c276149e1186a9a9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_OS_COUNT&nbsp;&nbsp;&nbsp;((uint16_t) (CPU_OS_DELAY * F_SLCK + 7)) / 8          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00263">cpu_clock_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="1c85ebcccafdd79c1b8cde66102e15f8"></a><!-- doxytag: member="cpu.h::CPU_OS_DELAY" ref="1c85ebcccafdd79c1b8cde66102e15f8" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_OS_DELAY&nbsp;&nbsp;&nbsp;1.5e-3          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="0e76a91bb8f8aba29f096018d7dc13f9"></a><!-- doxytag: member="cpu.h::CPU_PLL_COUNT" ref="0e76a91bb8f8aba29f096018d7dc13f9" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_PLL_COUNT&nbsp;&nbsp;&nbsp;(uint16_t) (CPU_PLL_DELAY * F_SLCK)          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00263">cpu_clock_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="431545043ea6fd93d472a2dd41384dbc"></a><!-- doxytag: member="cpu.h::CPU_PLL_DELAY" ref="431545043ea6fd93d472a2dd41384dbc" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_PLL_DELAY&nbsp;&nbsp;&nbsp;0.9e-3          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<a class="anchor" name="f999d49621875cf8998ab753b0dd073a"></a><!-- doxytag: member="cpu.h::CPU_USB_LOG2_DIV" ref="f999d49621875cf8998ab753b0dd073a" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define CPU_USB_LOG2_DIV&nbsp;&nbsp;&nbsp;0          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00263">cpu_clock_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="f95f764171696f885af7d5ad5e51297f"></a><!-- doxytag: member="cpu.h::F_SLCK" ref="f95f764171696f885af7d5ad5e51297f" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define F_SLCK&nbsp;&nbsp;&nbsp;32768          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

</div>
</div><p>
<hr><h2>Enumeration Type Documentation</h2>
<a class="anchor" name="df764cbdea00d65edcd07bb9953ad2b7"></a><!-- doxytag: member="cpu.h::@1" ref="df764cbdea00d65edcd07bb9953ad2b7" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Current processor status register (CPSR) bits. <dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f"></a><!-- doxytag: member="CPU_T_BIT" ref="df764cbdea00d65edcd07bb9953ad2b7d5be9cc47cedf2ab4e13a6da0abcac9f" args="" -->CPU_T_BIT</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957"></a><!-- doxytag: member="CPU_F_BIT" ref="df764cbdea00d65edcd07bb9953ad2b7278525e96113e9c2c1475d27652b1957" args="" -->CPU_F_BIT</em>&nbsp;</td><td>
Thumb mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58"></a><!-- doxytag: member="CPU_I_BIT" ref="df764cbdea00d65edcd07bb9953ad2b7694aa2cfe58cae6e7edf056536692d58" args="" -->CPU_I_BIT</em>&nbsp;</td><td>
Disable FIQ interrupts </td></tr>
</table>
</dl>

</div>
</div><p>
<a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d3"></a><!-- doxytag: member="cpu.h::arm_mode_t" ref="eee41a5dfc56e8b17d75ea76b54943d3" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="cpu_8h.html#eee41a5dfc56e8b17d75ea76b54943d3">arm_mode_t</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
The ARM7 has 7 processor modes: user, system, supervisor, abort, undefined, interrupt, and fast interrupt. All except user mode are privileged modes and all except user and system modes are exception modes.<p>
System mode is like user mode (it uses the user mode registers) but has full supervisor mode priviledges. System mode is usually switched from supervisor mode to access user mode registers, etc. Since system mode has full priviledges it is possible to switch back from system to supervisor mode. Once in user mode the only way the mode can be changed is with an interrupt.<p>
User mode is typically used for user applications and supervisor mode is typically used by the operating system (kernel mode). Without memory management many operating systems (such as ecos) will use supervisor mode for everything to reduce the overhead of switching modes.<p>
Each mode (except system) has their own banked copies of R13 (link register) and R14 (stack pointer) so there can be separate stacks for each mode. FIQ mode also has banked copies of R8--R12 for fast context switching. <dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922"></a><!-- doxytag: member="CPU_MODE_USR" ref="eee41a5dfc56e8b17d75ea76b54943d3954152a3eb9fd99f88fa84a3d9a70922" args="" -->CPU_MODE_USR</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d"></a><!-- doxytag: member="CPU_MODE_FIQ" ref="eee41a5dfc56e8b17d75ea76b54943d362e26a4f6617311e024d09284854c30d" args="" -->CPU_MODE_FIQ</em>&nbsp;</td><td>
User mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f"></a><!-- doxytag: member="CPU_MODE_IRQ" ref="eee41a5dfc56e8b17d75ea76b54943d3c93f31be0c7a9f239cadcf72ab8ce09f" args="" -->CPU_MODE_IRQ</em>&nbsp;</td><td>
Fast interrupt mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538"></a><!-- doxytag: member="CPU_MODE_SVC" ref="eee41a5dfc56e8b17d75ea76b54943d3b698e14bad93399bf26b1d6c8533a538" args="" -->CPU_MODE_SVC</em>&nbsp;</td><td>
Interrupt mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577"></a><!-- doxytag: member="CPU_MODE_ABT" ref="eee41a5dfc56e8b17d75ea76b54943d33342ce56c7eadd4f34f8d3e227648577" args="" -->CPU_MODE_ABT</em>&nbsp;</td><td>
Supervisor mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820"></a><!-- doxytag: member="CPU_MODE_UND" ref="eee41a5dfc56e8b17d75ea76b54943d35cf2a70583ebe3dfe32cc1a60ade7820" args="" -->CPU_MODE_UND</em>&nbsp;</td><td>
Abort mode </td></tr>
<tr><td valign="top"><em><a class="anchor" name="eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3"></a><!-- doxytag: member="CPU_MODE_SYS" ref="eee41a5dfc56e8b17d75ea76b54943d3de68dd11afe4e89cb49158ca90fc85a3" args="" -->CPU_MODE_SYS</em>&nbsp;</td><td>
Undefined mode </td></tr>
</table>
</dl>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="f632ecf4ed74ecf285b4aacf406f8f6d"></a><!-- doxytag: member="cpu.h::__attribute__" ref="f632ecf4ed74ecf285b4aacf406f8f6d" args="((always_inline)) void cpu_sp_set(uint32_t val)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__inline __attribute__           </td>
          <td>(</td>
          <td class="paramtype">(always_inline)&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set the stack pointer of the current mode <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>stack</em>&nbsp;</td><td>pointer initial value.</td></tr>
  </table>
</dl>
Set the control bits, I, F, T, and M[4:0] of the CPSR. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CPSR</em>&nbsp;</td><td>control bit mask.</td></tr>
  </table>
</dl>
Set the flag bits of the CPSR. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CPSR</em>&nbsp;</td><td>flag bits mask.</td></tr>
  </table>
</dl>
Set all the fields of CPSR (note the s and x fields are currently unused). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CPSR.</em>&nbsp;</td><td></td></tr>
  </table>
</dl>
Get the CPSR (all fields). <dl class="return" compact><dt><b>Returns:</b></dt><dd>CPSR.</dd></dl>
Set the mode bits M[4:0] of the CPSR. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>CPSR</em>&nbsp;</td><td>mode bits mask.</td></tr>
  </table>
</dl>
Get the SPSR (all fields). <dl class="return" compact><dt><b>Returns:</b></dt><dd>SPSR. </dd></dl>

</div>
</div><p>
<a class="anchor" name="aa5f561a0cda90797fd82dadb2c2e320"></a><!-- doxytag: member="cpu.h::_irq_spurious_handler" ref="aa5f561a0cda90797fd82dadb2c2e320" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _irq_spurious_handler           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Dummy ISR for spurious interrupts. 
<p>Referenced by <a class="el" href="cpu_8h-source.html#l00390">cpu_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="1df1e0dd612db3618069ccdcf8b9341e"></a><!-- doxytag: member="cpu.h::_irq_unexpected_handler" ref="1df1e0dd612db3618069ccdcf8b9341e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void _irq_unexpected_handler           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Dummy ISR for unexpected interrupts. 
<p>Referenced by <a class="el" href="cpu_8h-source.html#l00390">cpu_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="c638104994711da4e61450457e84571b"></a><!-- doxytag: member="cpu.h::cpu_brownout_detect_get" ref="c638104994711da4e61450457e84571b" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static bool cpu_brownout_detect_get           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00464">AT91C_RSTC_BODSTS</a>.</p>

</div>
</div><p>
<a class="anchor" name="bc08e828b40765f1f33626b742c526d3"></a><!-- doxytag: member="cpu.h::cpu_clock_init" ref="bc08e828b40765f1f33626b742c526d3" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_clock_init           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set up the main clock (MAINCK), PLL clock, and master clock (MCK). 
<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01874">AT91C_BASE_PMC</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00364">AT91C_CKGR_MOSCEN</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00427">AT91C_PMC_CSS_PLL_CLK</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00439">AT91C_PMC_LOCK</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00440">AT91C_PMC_MCKRDY</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00438">AT91C_PMC_MOSCS</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00430">AT91C_PMC_PRES_CLK_2</a>, <a class="el" href="bits_8h-source.html#l00024">BITS</a>, <a class="el" href="cpu_8h-source.html#l00253">CPU_OS_COUNT</a>, <a class="el" href="cpu_8h-source.html#l00256">CPU_PLL_COUNT</a>, and <a class="el" href="cpu_8h-source.html#l00258">CPU_USB_LOG2_DIV</a>.</p>

</div>
</div><p>
<a class="anchor" name="c9c3a47ef079a99be4a6094613324801"></a><!-- doxytag: member="cpu.h::cpu_flash_init" ref="c9c3a47ef079a99be4a6094613324801" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_flash_init           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialise flash memory controller. 
<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01880">AT91C_BASE_MC</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00595">AT91C_MC_FWS_0FWS</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00596">AT91C_MC_FWS_1FWS</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00597">AT91C_MC_FWS_2FWS</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00598">AT91C_MC_FWS_3FWS</a>, <a class="el" href="bits_8h-source.html#l00020">BITS_INSERT</a>, and <a class="el" href="cpu_8h-source.html#l00017">CPU_FLASH_READ_CYCLES</a>.</p>

</div>
</div><p>
<a class="anchor" name="a8cc514a5cebd91bd86deb4db7c49572"></a><!-- doxytag: member="cpu.h::cpu_idle" ref="a8cc514a5cebd91bd86deb4db7c49572" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_idle           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01874">AT91C_BASE_PMC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00413">AT91C_PMC_PCK</a>.</p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00413">cpu_sleep()</a>.</p>

</div>
</div><p>
<a class="anchor" name="afe326016bd7ada65717f5494214c92c"></a><!-- doxytag: member="cpu.h::cpu_init" ref="afe326016bd7ada65717f5494214c92c" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_init           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Initialise flash, disable watchdog, set up clocks. 
<p>References <a class="el" href="crt0_8c-source.html#l00264">_irq_spurious_handler()</a>, <a class="el" href="boot__freertos_8c-source.html#l00242">_irq_unexpected_handler()</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l01869">AT91C_BASE_AIC</a>, <a class="el" href="cpu_8c-source.html#l00039">cpu_clock_init()</a>, <a class="el" href="cpu_8c-source.html#l00026">cpu_flash_init()</a>, <a class="el" href="cpu_8h-source.html#l00345">cpu_reset_enable()</a>, <a class="el" href="cpu_8h-source.html#l00164">cpu_sram_remap()</a>, <a class="el" href="cpu_8h-source.html#l00206">cpu_watchdog_disable()</a>, <a class="el" href="irq_8h-source.html#l00026">IRQ_ID_MAX</a>, <a class="el" href="irq_8h-source.html#l00026">IRQ_ID_MIN</a>, and <a class="el" href="irq_8h-source.html#l00071">irq_vector_set()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2ef7f46934323f0d3b33755b4700d21c"></a><!-- doxytag: member="cpu.h::cpu_reset" ref="2ef7f46934323f0d3b33755b4700d21c" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_reset           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l00459">AT91C_RSTC_PERRST</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00458">AT91C_RSTC_PROCRST</a>.</p>

</div>
</div><p>
<a class="anchor" name="0e26fd07d602e1ee1bbd66622152e929"></a><!-- doxytag: member="cpu.h::cpu_reset_detect_get" ref="0e26fd07d602e1ee1bbd66622152e929" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static bool cpu_reset_detect_get           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00463">AT91C_RSTC_URSTS</a>.</p>

</div>
</div><p>
<a class="anchor" name="f8e65dcaae23c3c2d8d5498613836c53"></a><!-- doxytag: member="cpu.h::cpu_reset_disable" ref="f8e65dcaae23c3c2d8d5498613836c53" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_reset_disable           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00475">AT91C_RSTC_URSTEN</a>.</p>

</div>
</div><p>
<a class="anchor" name="0f8361e6bcdb71d246f7de7d2e34e42e"></a><!-- doxytag: member="cpu.h::cpu_reset_enable" ref="0f8361e6bcdb71d246f7de7d2e34e42e" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_reset_enable           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00475">AT91C_RSTC_URSTEN</a>.</p>

<p>Referenced by <a class="el" href="cpu_8h-source.html#l00390">cpu_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="8943b698ee1a5bad8cd8ae49eca4850a"></a><!-- doxytag: member="cpu.h::cpu_reset_type_get" ref="8943b698ee1a5bad8cd8ae49eca4850a" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static uint8_t cpu_reset_type_get           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01875">AT91C_BASE_RSTC</a>.</p>

</div>
</div><p>
<a class="anchor" name="e3bf64ee167aebcec01f2c76eeb056b2"></a><!-- doxytag: member="cpu.h::cpu_sleep" ref="e3bf64ee167aebcec01f2c76eeb056b2" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static void cpu_sleep           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>

<p>References <a class="el" href="cpu_8h-source.html#l00326">cpu_idle()</a>.</p>

</div>
</div><p>
<a class="anchor" name="2fce4754c55276f86960163dc26b86f9"></a><!-- doxytag: member="cpu.h::cpu_sram_remap" ref="2fce4754c55276f86960163dc26b86f9" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__inline void cpu_sram_remap           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remap SRAM that SRAM exists at 0x200000 as well as at 0x000000. On reset the Flash at 0x100000 is mapped to address 0x00000 as well as 0x100000. Note writing to the remap bit a second time toggles the remapping so that the Flash appears at address 0x000000. This causes problems if running from the debugger since theCPU is not reset. Thus we don't toggle the remap bit if the SRAM is already remapped. 
<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01880">AT91C_BASE_MC</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l01907">AT91C_ISRAM</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00573">AT91C_MC_RCB</a>.</p>

<p>Referenced by <a class="el" href="cpu_8c-source.html#l00101">cpu_init()</a>.</p>

</div>
</div><p>
<a class="anchor" name="5f0bfcd3af2b0d67ce7c436299d11a51"></a><!-- doxytag: member="cpu.h::cpu_sram_unremap" ref="5f0bfcd3af2b0d67ce7c436299d11a51" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__inline void cpu_sram_unremap           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Unremap SRAM. 
<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01880">AT91C_BASE_MC</a>, <a class="el" href="AT91SAM7S256_8h-source.html#l01907">AT91C_ISRAM</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00573">AT91C_MC_RCB</a>.</p>

</div>
</div><p>
<a class="anchor" name="ec9330e16bf3cc611660796b9da475d7"></a><!-- doxytag: member="cpu.h::cpu_watchdog_disable" ref="ec9330e16bf3cc611660796b9da475d7" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">__inline void cpu_watchdog_disable           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td width="100%"></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Disable watchdog. 
<p>References <a class="el" href="AT91SAM7S256_8h-source.html#l01878">AT91C_BASE_WDTC</a>, and <a class="el" href="AT91SAM7S256_8h-source.html#l00541">AT91C_WDTC_WDDIS</a>.</p>

<p>Referenced by <a class="el" href="cpu_8c-source.html#l00101">cpu_init()</a>.</p>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Tue Mar 25 14:38:22 2008 for mmculib by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.5 </small></address>
</body>
</html>
